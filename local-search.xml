<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>介绍一下我弟弟</title>
    <link href="/2025/10/03/My-Brothers-Growth-Diary/"/>
    <url>/2025/10/03/My-Brothers-Growth-Diary/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><!-- 开头写一段引言，奠定文章基调 --><blockquote><p>时光荏苒，那个跟在我身后流着鼻涕的小不点，不知不觉已长成翩翩少年。翻看旧照片，往事如潮水般涌来。谨以此文，记录我们一起走过的美好时光。</p></blockquote><!-- 第一部分：婴儿时期 --><h2 id="🍼-初来乍到，小小一只"><a href="#🍼-初来乍到，小小一只" class="headerlink" title="🍼 初来乍到，小小一只"></a>🍼 初来乍到，小小一只</h2><p><img src="https://cdn.jsdelivr.net/gh/qiuliqi/qiuliqi.github.io@master/img/psc3.jpg"></p><ul><li>  <strong>时间：</strong> 2012年8月7日</li><li>  <strong>ts：</strong> 这是最早的一张图片</li></ul><hr><!-- 第二部分：幼儿时期 --><h2 id="🚗-蹒跚学步，咿呀学语"><a href="#🚗-蹒跚学步，咿呀学语" class="headerlink" title="🚗 蹒跚学步，咿呀学语"></a>🚗 蹒跚学步，咿呀学语</h2><p><img src="https://cdn.jsdelivr.net/gh/qiuliqi/qiuliqi.github.io@master/img/psc2.jpg"></p><ul><li>  <strong>时间：</strong> 2014年3月22日</li><li>  <strong>ts：</strong> 在我家后面山上拍的</li></ul><p><img src="https://cdn.jsdelivr.net/gh/qiuliqi/qiuliqi.github.io@master/img/a8a556f7dd716587b8f1a041fe83485e.jpg"><br><img src="https://cdn.jsdelivr.net/gh/qiuliqi/qiuliqi.github.io@master/img/psc4.jpg"><br><img src="https://cdn.jsdelivr.net/gh/qiuliqi/qiuliqi.github.io@master/img/psc5.jpg"></p><ul><li>  <strong>时间：</strong> 2016年1月25日</li><li>  <strong>ts：</strong> 表情表演。。。</li></ul><hr><!-- 第三部分：童年时期 --><h2 id="🚲-小小少年，没有烦恼"><a href="#🚲-小小少年，没有烦恼" class="headerlink" title="🚲 小小少年，没有烦恼"></a>🚲 小小少年，没有烦恼</h2><p><img src="https://cdn.jsdelivr.net/gh/qiuliqi/qiuliqi.github.io@master/img/87fd476112aca892daa972a33074b78b.jpg"><br><img src="https://cdn.jsdelivr.net/gh/qiuliqi/qiuliqi.github.io@master/img/IMG_20170824_115843.jpg"><br><img src="https://cdn.jsdelivr.net/gh/qiuliqi/qiuliqi.github.io@master/img/135d878ed1b9f023aee12e4577ec1b48.jpg"><br><img src="https://cdn.jsdelivr.net/gh/qiuliqi/qiuliqi.github.io@master/img/IMG_20200213_174500.jpg"></p><ul><li>  <strong>时间：</strong> 2016年2月18日</li><li>  <strong>ts：</strong> 洗碗哈哈</li></ul><hr><!-- 第四部分：青少年时期 --><h2 id="🎓-青春飞扬，奔赴山海"><a href="#🎓-青春飞扬，奔赴山海" class="headerlink" title="🎓 青春飞扬，奔赴山海"></a>🎓 青春飞扬，奔赴山海</h2><p><img src="https://cdn.jsdelivr.net/gh/qiuliqi/qiuliqi.github.io@master/img/ead7b493851826bc3d282e0ab5a69195.jpg"><br><img src="https://cdn.jsdelivr.net/gh/qiuliqi/qiuliqi.github.io@master/img/f9bc6652d542d90212d9c2fececb23a7.jpg"><br><img src="https://cdn.jsdelivr.net/gh/qiuliqi/qiuliqi.github.io@master/img/IMG_20180223_174419.jpg"><br><img src="https://cdn.jsdelivr.net/gh/qiuliqi/qiuliqi.github.io@master/img/IMG_20190913_100539.jpg"><br><img src="https://cdn.jsdelivr.net/gh/qiuliqi/qiuliqi.github.io@master/img/IMG_20200222_094037.jpg"><br><img src="https://cdn.jsdelivr.net/gh/qiuliqi/qiuliqi.github.io@master/img/IMG_20230121_154118.jpg"><br><img src="https://cdn.jsdelivr.net/gh/qiuliqi/qiuliqi.github.io@master/img/IMG_20231002_160046.jpg"></p><ul><li>  <strong>时间：</strong> 2023年10月2日</li><li>  <strong>ts：</strong> 一转眼，就是高中生了。</li></ul><p><img src="https://cdn.jsdelivr.net/gh/qiuliqi/qiuliqi.github.io@master/img/mmexport1742740000460.jpg"><br><img src="https://cdn.jsdelivr.net/gh/qiuliqi/qiuliqi.github.io@master/img/IMG_20250831_113529.jpg"><br><img src="https://cdn.jsdelivr.net/gh/qiuliqi/qiuliqi.github.io@master/img/IMG_20250831_130054.jpg"></p><ul><li>  <strong>时间：</strong> 2025年8月31日</li><li>  <strong>ts：</strong> 高中毕业，过来我这旅游</li></ul><!-- 结尾，抒发感情 --><h2 id="💌-写到最后"><a href="#💌-写到最后" class="headerlink" title="💌 写到最后"></a>💌 写到最后</h2><p><img src="https://cdn.jsdelivr.net/gh/qiuliqi/qiuliqi.github.io@master/img/IMG_20200207_151038.jpg"></p><p>愿你永远阳光，永远赤诚，勇敢地去追逐自己的梦想。</p>]]></content>
    
    
    
    <tags>
      
      <tag>弟弟</tag>
      
      <tag>成长</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>卧槽秋天来了啊！</title>
    <link href="/2025/10/03/guoqing/"/>
    <url>/2025/10/03/guoqing/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="国庆随拍"><a href="#国庆随拍" class="headerlink" title="国庆随拍"></a>国庆随拍</h2><p><img src="https://cdn.jsdelivr.net/gh/qiuliqi/qiuliqi.github.io@master/img/IMG_20250928_083347.jpg"></p><p><img src="https://cdn.jsdelivr.net/gh/qiuliqi/qiuliqi.github.io@master/img/IMG_20250928_083531.jpg"></p><p><img src="https://cdn.jsdelivr.net/gh/qiuliqi/qiuliqi.github.io@master/img/IMG_20250928_083015.jpg"></p><p><img src="https://cdn.jsdelivr.net/gh/qiuliqi/qiuliqi.github.io@master/img/IMG_20250928_082943.jpg"></p><p><img src="https://cdn.jsdelivr.net/gh/qiuliqi/qiuliqi.github.io@master/img/IMG_20250928_082915.jpg"></p>]]></content>
    
    
    
    <tags>
      
      <tag>国庆快乐</tag>
      
      <tag>秋天</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>简陋API搭建</title>
    <link href="/2025/10/02/apidaj/"/>
    <url>/2025/10/02/apidaj/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p style="text-indent: 2em;">今天在网上看到一个大神的随机图片的api，刚好最近在做网页的动态背景，这么多好看的动态壁纸，当然要全部都放到我的网站上</p><p>于是就把大佬的api简单修改一下，做成随机视频的api，配合wallpaper就可以在桌面设置可以随机的动态壁纸</p><p><img src="https://cdn.jsdelivr.net/gh/qiuliqi/live2d@master/biz/20200528224934.png" alt="代码截图"></p><p>起飞</p><p>~~ API合集：<a href="https://api.qiuliqi.top/">https://api.qiuliqi.top/</a></p><p>~~ 随机视频api：<a href="https://api.qiuliqi.top/sp/">https://api.qiuliqi.top/sp/</a></p><p>~~ 动态壁纸+看板娘：<a href="https://qiuliqi.top/2233/dtbz.html">https://qiuliqi.top/2233/dtbz.html</a></p><p>~~ 放桌面使用：<a href="https://qiuliqi.top/2233/dtbz.html?bottom=40&amp;right=20">https://qiuliqi.top/2233/dtbz.html?bottom=40&amp;right=20</a></p><p>~~ 复制链接在wallpaper的URL使用即可</p><p>感谢<a href="https://www.toubiec.cn/12.html">苏晓晴</a>博客提供的API源码</p>]]></content>
    
    
    
    <tags>
      
      <tag>api</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>关于北极代码库贡献者</title>
    <link href="/2025/10/02/bjidmk/"/>
    <url>/2025/10/02/bjidmk/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p>最近才听说GitHub宣布已将所有代码永久封存于北极地底1000年！立马跑去GitHub看看我的代码库，果然我的hellWord也在上面</p><p><img src="https://cdn.jsdelivr.net/gh/qiuliqi/live2d@master/biz/20200724194428-1.png" alt="截图2"></p><p>虽然只写个helloWord感觉有点羞耻，但我想应该不会只有我一人这样吧！嘿嘿</p>]]></content>
    
    
    
    <tags>
      
      <tag>github</tag>
      
      <tag>Hello World</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>用flask做一个属于自己的小说书架</title>
    <link href="/2025/10/02/my-bookshelf/"/>
    <url>/2025/10/02/my-bookshelf/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>一直想做一个属于自己的网络书架，直接读取小说txt文件，多端有阅读记录。</p><p>其他的小说网站要么要花钱，要么广告多的飞起，实在看的心累。</p><p>在<a href="https://read.helloflask.com/">李辉老师</a>那学了一周的flask，就做了这个书架，基本功能还算有了，大多都是老师教的功能实现</p><p>UI确实是有点丑陋，css都是东拼西凑合上来的，谁叫我没有艺术细胞呢？</p><p>~~ 小秋秋阅读 <a href="https://book.qiuliqi.top/">https://book.qiuliqi.top/</a></p><p><img src="https://api.qiuliqi.top/tp/tuc/20210820194321.png"></p><p><img src="https://api.qiuliqi.top/tp/tuc/20210820194333.png"></p><h2 id="已实现的功能"><a href="#已实现的功能" class="headerlink" title="已实现的功能"></a>已实现的功能</h2><p>1.上传txt文件自动导入小说，生成小说目录</p><p>2.注册登录后可以保存阅读记录</p><p>3.留言板功能</p><p>4.管理员账号管理会员信息和留言信息</p><h2 id="部分代码"><a href="#部分代码" class="headerlink" title="部分代码"></a>部分代码</h2><p>app.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> flask <span class="hljs-keyword">import</span> Flask, request, render_template, url_for, flash, redirect<br><span class="hljs-keyword">from</span> gevent <span class="hljs-keyword">import</span> pywsgi<br><span class="hljs-keyword">from</span> flask_sqlalchemy <span class="hljs-keyword">import</span> SQLAlchemy  <span class="hljs-comment"># 数据库扩展类</span><br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> sys<br><span class="hljs-keyword">import</span> click<br><span class="hljs-keyword">from</span> werkzeug.security <span class="hljs-keyword">import</span> generate_password_hash, check_password_hash<br><span class="hljs-keyword">from</span> flask_login <span class="hljs-keyword">import</span> LoginManager, UserMixin,login_user, login_required, logout_user,current_user<br><br><br>WIN = sys.platform.startswith(<span class="hljs-string">&#x27;win&#x27;</span>)<br><span class="hljs-keyword">if</span> WIN:  <span class="hljs-comment"># 如果是 Windows 系统，使用三个斜线</span><br>    prefix = <span class="hljs-string">&#x27;sqlite:///&#x27;</span><br><span class="hljs-keyword">else</span>:  <span class="hljs-comment"># 否则使用四个斜线</span><br>    prefix = <span class="hljs-string">&#x27;sqlite:////&#x27;</span><br><br>app = Flask(__name__)<br>app.config[<span class="hljs-string">&#x27;SECRET_KEY&#x27;</span>] = <span class="hljs-string">&#x27;dev&#x27;</span>  <span class="hljs-comment"># 等同于 app.secret_key = &#x27;dev&#x27;</span><br>app.config[<span class="hljs-string">&#x27;SQLALCHEMY_DATABASE_URI&#x27;</span>] = prefix + os.path.join(app.root_path, <span class="hljs-string">&#x27;data.db&#x27;</span>)<br>app.config[<span class="hljs-string">&#x27;SQLALCHEMY_TRACK_MODIFICATIONS&#x27;</span>] = <span class="hljs-literal">False</span>  <span class="hljs-comment"># 关闭对模型修改的监控</span><br><span class="hljs-comment"># 在扩展类实例化前加载配置</span><br>db = SQLAlchemy(app)  <span class="hljs-comment"># 初始化扩展，传入程序实例 app</span><br>login_manager = LoginManager(app)  <span class="hljs-comment"># 实例化登录扩展类</span><br>login_manager.login_view = <span class="hljs-string">&#x27;login&#x27;</span><br><br><br><span class="hljs-comment"># 用户表</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">User</span>(<span class="hljs-params">db.Model,UserMixin</span>):</span>  <span class="hljs-comment"># 表名将会是 user（自动生成，小写处理）</span><br>    <span class="hljs-built_in">id</span> = db.Column(db.Integer, primary_key=<span class="hljs-literal">True</span>)<br>    name = db.Column(db.String(<span class="hljs-number">20</span>))<br>    username = db.Column(db.String(<span class="hljs-number">20</span>))  <span class="hljs-comment"># 用户名</span><br>    password_hash = db.Column(db.String(<span class="hljs-number">128</span>))  <span class="hljs-comment"># 密码散列值</span><br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">set_password</span>(<span class="hljs-params">self, password</span>):</span>  <span class="hljs-comment"># 用来设置密码的方法，接受密码作为参数</span><br>        self.password_hash = generate_password_hash(password)  <span class="hljs-comment"># 将生成的密码保持到对应字段</span><br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">validate_password</span>(<span class="hljs-params">self, password</span>):</span>  <span class="hljs-comment"># 用于验证密码的方法，接受密码作为参数</span><br>        <span class="hljs-keyword">return</span> check_password_hash(self.password_hash, password)  <span class="hljs-comment"># 返回布尔值</span><br><br><br><span class="hljs-comment"># 留言表</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Movie</span>(<span class="hljs-params">db.Model</span>):</span>  <span class="hljs-comment"># 表名将会是 movie</span><br>    <span class="hljs-built_in">id</span> = db.Column(db.Integer, primary_key=<span class="hljs-literal">True</span>)  <span class="hljs-comment"># 主键</span><br>    content = db.Column(db.String(<span class="hljs-number">60</span>))  <span class="hljs-comment"># 留言内容</span><br>    name = db.Column(db.String(<span class="hljs-number">6</span>))  <span class="hljs-comment"># 昵称</span><br><br><br><span class="hljs-comment"># 阅读记录表</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">Read</span>(<span class="hljs-params">db.Model</span>):</span>  <span class="hljs-comment"># 表名将会是 read</span><br>    <span class="hljs-built_in">id</span> = db.Column(db.Integer, primary_key=<span class="hljs-literal">True</span>)  <span class="hljs-comment"># 主键</span><br>    uesrname = db.Column(db.String(<span class="hljs-number">20</span>))  <span class="hljs-comment"># 用户名</span><br>    bookname = db.Column(db.String(<span class="hljs-number">20</span>))  <span class="hljs-comment"># 书名</span><br>    zjid = db.Column(db.Integer)  <span class="hljs-comment"># 书名</span><br><br><br><span class="hljs-comment"># 初始化数据库</span><br><span class="hljs-meta">@app.cli.command()  </span><span class="hljs-comment"># 注册为命令</span><br><span class="hljs-meta">@click.option(<span class="hljs-params"><span class="hljs-string">&#x27;--drop&#x27;</span>, is_flag=<span class="hljs-literal">True</span>, <span class="hljs-built_in">help</span>=<span class="hljs-string">&#x27;删除后创建.&#x27;</span></span>)  </span><span class="hljs-comment"># 设置选项</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">initdb</span>(<span class="hljs-params">drop</span>):</span><br>    <span class="hljs-string">&quot;&quot;&quot;初始化数据库.&quot;&quot;&quot;</span><br>    <span class="hljs-keyword">if</span> drop:  <span class="hljs-comment"># 判断是否输入了选项</span><br>        db.drop_all()  <span class="hljs-comment"># 删除数据库</span><br>    db.create_all()<br>    click.echo(<span class="hljs-string">&#x27;已初始化的数据库.&#x27;</span>)<br><br><br><span class="hljs-comment"># 生成管理员账号</span><br><span class="hljs-meta">@app.cli.command()</span><br><span class="hljs-meta">@click.option(<span class="hljs-params"><span class="hljs-string">&#x27;--username&#x27;</span>, prompt=<span class="hljs-literal">True</span>, <span class="hljs-built_in">help</span>=<span class="hljs-string">&#x27;The username used to login.&#x27;</span></span>)</span><br><span class="hljs-meta">@click.option(<span class="hljs-params"><span class="hljs-string">&#x27;--password&#x27;</span>, prompt=<span class="hljs-literal">True</span>, hide_input=<span class="hljs-literal">True</span>, confirmation_prompt=<span class="hljs-literal">True</span>, <span class="hljs-built_in">help</span>=<span class="hljs-string">&#x27;The password used to login.&#x27;</span></span>)</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">admin</span>(<span class="hljs-params">username, password</span>):</span><br>    <span class="hljs-string">&quot;&quot;&quot;Create user.&quot;&quot;&quot;</span><br>    db.create_all()<br><br>    user = User.query.first()<br>    <span class="hljs-keyword">if</span> user <span class="hljs-keyword">is</span> <span class="hljs-keyword">not</span> <span class="hljs-literal">None</span>:<br>        click.echo(<span class="hljs-string">&#x27;Updating user...&#x27;</span>)<br>        user.username = username<br>        user.set_password(password)  <span class="hljs-comment"># 设置密码</span><br>    <span class="hljs-keyword">else</span>:<br>        click.echo(<span class="hljs-string">&#x27;Creating user...&#x27;</span>)<br>        user = User(username=username, name=<span class="hljs-string">&#x27;Admin&#x27;</span>)<br>        user.set_password(password)  <span class="hljs-comment"># 设置密码</span><br>        db.session.add(user)<br><br>    db.session.commit()  <span class="hljs-comment"># 提交数据库会话</span><br>    click.echo(<span class="hljs-string">&#x27;Done.&#x27;</span>)<br><br><br><span class="hljs-comment"># 初始化 Flask-Login</span><br><span class="hljs-meta">@login_manager.user_loader</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">load_user</span>(<span class="hljs-params">user_id</span>):</span>  <span class="hljs-comment"># 创建用户加载回调函数，接受用户 ID 作为参数</span><br>    user = User.query.get(<span class="hljs-built_in">int</span>(user_id))  <span class="hljs-comment"># 用 ID 作为 User 模型的主键查询对应的用户</span><br>    <span class="hljs-keyword">return</span> user  <span class="hljs-comment"># 返回用户对象</span><br><br><br><span class="hljs-comment"># 首页</span><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/&#x27;</span>, methods=[<span class="hljs-string">&#x27;GET&#x27;</span>, <span class="hljs-string">&#x27;POST&#x27;</span>]</span>)</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">index</span>():</span><br>    <span class="hljs-comment"># 处理新增留言</span><br>    <span class="hljs-keyword">if</span> request.method == <span class="hljs-string">&#x27;POST&#x27;</span>:  <span class="hljs-comment"># 判断是否是 POST 请求</span><br>        <span class="hljs-comment"># 获取表单数据</span><br>        content = request.form.get(<span class="hljs-string">&#x27;content&#x27;</span>)  <span class="hljs-comment"># 传入表单对应输入字段的 name 值</span><br>        name = request.form.get(<span class="hljs-string">&#x27;name&#x27;</span>)<br>        <span class="hljs-comment"># 验证数据</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> content <span class="hljs-keyword">or</span> <span class="hljs-keyword">not</span> name <span class="hljs-keyword">or</span> <span class="hljs-built_in">len</span>(name) &gt; <span class="hljs-number">6</span> <span class="hljs-keyword">or</span> <span class="hljs-built_in">len</span>(content) &gt; <span class="hljs-number">60</span>:<br>            flash(<span class="hljs-string">&#x27;输入无效.&#x27;</span>)  <span class="hljs-comment"># 显示错误提示</span><br>            <span class="hljs-keyword">return</span> redirect(url_for(<span class="hljs-string">&#x27;index&#x27;</span>))  <span class="hljs-comment"># 重定向回主页</span><br>        <span class="hljs-comment"># 保存表单数据到数据库</span><br>        movie = Movie(content=content, name=name)  <span class="hljs-comment"># 创建记录</span><br>        db.session.add(movie)  <span class="hljs-comment"># 添加到数据库会话</span><br>        db.session.commit()  <span class="hljs-comment"># 提交数据库会话</span><br>        flash(<span class="hljs-string">&#x27;您的留言已提交成功.&#x27;</span>)<br>        <span class="hljs-keyword">return</span> redirect(url_for(<span class="hljs-string">&#x27;index&#x27;</span>))  <span class="hljs-comment"># 重定向回主页</span><br>    <span class="hljs-comment"># 读取留言信息</span><br>    ly_lists = Movie.query.<span class="hljs-built_in">all</span>()<br>    <span class="hljs-comment"># 读取小说列表</span><br>    book_lists = os.listdir(<span class="hljs-string">&#x27;static/book&#x27;</span>)<br>    <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&#x27;index.html&#x27;</span>, book_lists=book_lists, ly_lists=ly_lists)<br><br><br><span class="hljs-comment"># 登录页</span><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/login&#x27;</span>, methods=[<span class="hljs-string">&#x27;GET&#x27;</span>, <span class="hljs-string">&#x27;POST&#x27;</span>]</span>)</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">login</span>():</span><br>    <span class="hljs-keyword">if</span> request.method == <span class="hljs-string">&#x27;POST&#x27;</span>:<br>        username = request.form[<span class="hljs-string">&#x27;username&#x27;</span>]<br>        password = request.form[<span class="hljs-string">&#x27;password&#x27;</span>]<br><br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> username <span class="hljs-keyword">or</span> <span class="hljs-keyword">not</span> password:<br>            flash(<span class="hljs-string">&#x27;输入无效.&#x27;</span>)<br>            <span class="hljs-keyword">return</span> redirect(url_for(<span class="hljs-string">&#x27;login&#x27;</span>))<br><br>        user = User.query.filter_by(username=username).first()<br>        <span class="hljs-keyword">if</span> user:<br>            <span class="hljs-comment"># 验证用户名和密码是否一致</span><br>            <span class="hljs-keyword">if</span> username == user.username <span class="hljs-keyword">and</span> user.validate_password(password):<br>                login_user(user)  <span class="hljs-comment"># 登入用户</span><br>                flash(current_user.username + <span class="hljs-string">&#x27;，欢迎回家！&#x27;</span>)<br>                <span class="hljs-keyword">return</span> redirect(url_for(<span class="hljs-string">&#x27;index&#x27;</span>))  <span class="hljs-comment"># 重定向到主页</span><br><br>        flash(<span class="hljs-string">&#x27;无效的用户名或密码.&#x27;</span>)  <span class="hljs-comment"># 如果验证失败，显示错误消息</span><br>        <span class="hljs-keyword">return</span> redirect(url_for(<span class="hljs-string">&#x27;login&#x27;</span>))  <span class="hljs-comment"># 重定向回登录页面</span><br><br>    <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&#x27;login.html&#x27;</span>)<br><br><br><span class="hljs-comment"># 注册页</span><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/signup&#x27;</span>, methods=[<span class="hljs-string">&#x27;GET&#x27;</span>, <span class="hljs-string">&#x27;POST&#x27;</span>]</span>)</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">signup</span>():</span><br>    <span class="hljs-keyword">if</span> request.method == <span class="hljs-string">&#x27;POST&#x27;</span>:<br>        username = request.form[<span class="hljs-string">&#x27;username&#x27;</span>]<br>        password = request.form[<span class="hljs-string">&#x27;password&#x27;</span>]<br><br>        <span class="hljs-comment"># 检测正确性</span><br>        <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> username <span class="hljs-keyword">or</span> <span class="hljs-keyword">not</span> password <span class="hljs-keyword">or</span> <span class="hljs-built_in">len</span>(username) &gt; <span class="hljs-number">20</span> <span class="hljs-keyword">or</span> <span class="hljs-built_in">len</span>(password) &gt; <span class="hljs-number">20</span>:<br>            flash(<span class="hljs-string">&#x27;输入无效.&#x27;</span>)<br>            <span class="hljs-keyword">return</span> redirect(url_for(<span class="hljs-string">&#x27;signup&#x27;</span>))<br>        <span class="hljs-comment"># 调戏大佬</span><br>        <span class="hljs-keyword">if</span> username.lower() == <span class="hljs-string">&#x27;admin&#x27;</span>:<br>            flash(<span class="hljs-string">&#x27;大佬，管理员是小秋秋哦！&#x27;</span>)<br>            <span class="hljs-keyword">return</span> redirect(url_for(<span class="hljs-string">&#x27;signup&#x27;</span>))<br>        <span class="hljs-comment"># 检查账号重复项</span><br>        users = User.query.filter_by(username=username).first()<br>        <span class="hljs-keyword">if</span> users:  <span class="hljs-comment"># 如果查询到，则重复</span><br>            flash(<span class="hljs-string">&#x27;注册账号重复，请重新输入！&#x27;</span>)<br>            <span class="hljs-keyword">return</span> redirect(url_for(<span class="hljs-string">&#x27;signup&#x27;</span>))<br>        <span class="hljs-keyword">else</span>:  <span class="hljs-comment"># 没有查询到，则注册</span><br>            user = User(username=username, name=username)<br>            user.set_password(password)  <span class="hljs-comment"># 设置密码</span><br>            db.session.add(user)<br>            db.session.commit()  <span class="hljs-comment"># 提交数据库会话</span><br>            flash(<span class="hljs-string">&#x27;注册成功！&#x27;</span>)<br>            <span class="hljs-keyword">return</span> redirect(url_for(<span class="hljs-string">&#x27;login&#x27;</span>))  <span class="hljs-comment"># 前往登录页</span><br><br>    <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&#x27;signup.html&#x27;</span>)<br><br><br><span class="hljs-comment"># 会员管理</span><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/admin&#x27;</span></span>)</span><br><span class="hljs-meta">@login_required  </span><span class="hljs-comment"># 用于视图保护，后面会详细介绍</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">admin</span>():</span><br>    <span class="hljs-keyword">if</span> current_user.<span class="hljs-built_in">id</span> == <span class="hljs-number">1</span>:  <span class="hljs-comment"># 如果会员id为 1</span><br>        <span class="hljs-comment"># 查询所有会员信息</span><br>        admins = User.query.<span class="hljs-built_in">all</span>()<br>        <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&#x27;admin.html&#x27;</span>, admins=admins)<br><br><br><span class="hljs-comment"># 删除会员</span><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/admin/delete/&lt;int:admin_id&gt;&#x27;</span>, methods=[<span class="hljs-string">&#x27;POST&#x27;</span>]</span>)</span><br><span class="hljs-meta">@login_required  </span><span class="hljs-comment"># 用于视图保护，后面会详细介绍</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">admindelete</span>(<span class="hljs-params">admin_id</span>):</span><br>    <span class="hljs-keyword">if</span> admin_id != <span class="hljs-number">1</span>:<br>        admim = User.query.get_or_404(admin_id)  <span class="hljs-comment"># 获取会员记录</span><br>        name = admim.username<br>        <span class="hljs-comment"># 删除阅读记录</span><br>        readjls = Read.query.filter_by(uesrname=name).<span class="hljs-built_in">all</span>()<br>        <span class="hljs-keyword">if</span> readjls:<br>            <span class="hljs-keyword">for</span> readjl <span class="hljs-keyword">in</span> readjls:<br>                db.session.delete(readjl)<br>        <span class="hljs-comment"># 删除会员</span><br>        db.session.delete(admim)<br>        db.session.commit()  <span class="hljs-comment"># 提交数据库会话</span><br>        flash(<span class="hljs-string">&#x27;会员已删除！&#x27;</span>)<br><br>    <span class="hljs-keyword">return</span> redirect(url_for(<span class="hljs-string">&#x27;admin&#x27;</span>))  <span class="hljs-comment"># 重定向回会员页</span><br><br><br><span class="hljs-comment"># 登出页</span><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/logout&#x27;</span></span>)</span><br><span class="hljs-meta">@login_required  </span><span class="hljs-comment"># 用于视图保护，后面会详细介绍</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">logout</span>():</span><br>    logout_user()  <span class="hljs-comment"># 登出用户</span><br>    flash(<span class="hljs-string">&#x27;欢迎下次光临！&#x27;</span>)<br>    <span class="hljs-keyword">return</span> redirect(url_for(<span class="hljs-string">&#x27;index&#x27;</span>))  <span class="hljs-comment"># 重定向回首页</span><br><br><br><span class="hljs-comment"># 删除留言</span><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/movie/delete/&lt;int:movie_id&gt;&#x27;</span>, methods=[<span class="hljs-string">&#x27;POST&#x27;</span>]</span>)  </span><span class="hljs-comment"># 限定只接受 POST 请求</span><br><span class="hljs-meta">@login_required  </span><span class="hljs-comment"># 用于视图保护，后面会详细介绍</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">delete</span>(<span class="hljs-params">movie_id</span>):</span><br>    movie = Movie.query.get_or_404(movie_id)  <span class="hljs-comment"># 获取电影记录</span><br>    db.session.delete(movie)  <span class="hljs-comment"># 删除对应的记录</span><br>    db.session.commit()  <span class="hljs-comment"># 提交数据库会话</span><br>    flash(<span class="hljs-string">&#x27;留言已删除.&#x27;</span>)<br>    <span class="hljs-keyword">return</span> redirect(url_for(<span class="hljs-string">&#x27;index&#x27;</span>))  <span class="hljs-comment"># 重定向回主页</span><br><br><br><span class="hljs-comment"># 目录页</span><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/book/&lt;book_id&gt;&#x27;</span></span>)</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">book_page</span>(<span class="hljs-params">book_id=<span class="hljs-string">&#x27;许仙志.txt&#x27;</span></span>):</span><br>    book_path = <span class="hljs-string">&#x27;static/book/&#x27;</span> + book_id<br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(book_path, <span class="hljs-string">&#x27;r&#x27;</span>, encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>        txts = f.readlines()<br>    nums = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">len</span>(txts) / <span class="hljs-number">100</span>) + <span class="hljs-number">1</span><br>    page_nums = <span class="hljs-built_in">range</span>(<span class="hljs-number">1</span>, <span class="hljs-built_in">int</span>(nums))<br>    <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&#x27;page.html&#x27;</span>, book_id=book_id, page_nums=page_nums)<br><br><br><span class="hljs-comment"># 阅读记录</span><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/record&#x27;</span></span>)</span><br><span class="hljs-meta">@login_required  </span><span class="hljs-comment"># 用于视图保护，后面会详细介绍</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">record</span>():</span><br>    <span class="hljs-comment"># 数据库查找阅读记录</span><br>    zj_ids = Read.query.filter_by(uesrname=current_user.username).<span class="hljs-built_in">all</span>()  <span class="hljs-comment"># 返回包含所有查询记录的列表</span><br>    <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&#x27;record.html&#x27;</span>, zj_ids=zj_ids)<br><br><br><span class="hljs-comment"># 阅读页</span><br><span class="hljs-meta">@app.route(<span class="hljs-params"><span class="hljs-string">&#x27;/&lt;book_id&gt;/&lt;int:movie_id&gt;&#x27;</span>, methods=[<span class="hljs-string">&#x27;GET&#x27;</span>, <span class="hljs-string">&#x27;POST&#x27;</span>]</span>)</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">home</span>(<span class="hljs-params">book_id=<span class="hljs-string">&#x27;许仙志.txt&#x27;</span>, movie_id=<span class="hljs-number">1</span></span>):</span><br>    book_path = <span class="hljs-string">&#x27;static/book/&#x27;</span> + book_id<br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(book_path, <span class="hljs-string">&#x27;r&#x27;</span>, encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>        txts = f.readlines()<br>    <span class="hljs-comment"># 如果已经登录，则记录阅读记录</span><br>    <span class="hljs-keyword">if</span> current_user.is_authenticated:<br>        username = current_user.username<br>        <span class="hljs-keyword">if</span> movie_id == <span class="hljs-number">1</span>:  <span class="hljs-comment"># 如果直接点阅读访问第一章，则查询阅读记录</span><br>            xj_ids = Read.query.filter_by(uesrname=username, bookname=book_id).first()<br>            <span class="hljs-keyword">if</span> xj_ids:  <span class="hljs-comment"># 如果查询到，这读取章节id</span><br>                movie_id = xj_ids.zjid<br>            <span class="hljs-keyword">else</span>:  <span class="hljs-comment"># 如果查询不到到，则创建记录</span><br>                r1 = Read(uesrname=username, bookname=book_id, zjid=movie_id)  <span class="hljs-comment"># # 创建一个 Read 记录</span><br>                db.session.add(r1)  <span class="hljs-comment"># 把新创建的记录添加到数据库会话</span><br>                db.session.commit()  <span class="hljs-comment"># 提交数据库会话，只需要在最后调用一次即可</span><br>        <span class="hljs-keyword">else</span>:  <span class="hljs-comment"># 如果不是阅读第一章，则更新阅读记录</span><br>            xj_ids = Read.query.filter_by(uesrname=username, bookname=book_id).first()<br>            <span class="hljs-keyword">if</span> xj_ids:<br>                xj_ids.zjid = movie_id<br>                db.session.commit()  <span class="hljs-comment"># 注意仍然需要调用这一行来提交改动</span><br>            <span class="hljs-keyword">else</span>:  <span class="hljs-comment"># 如果查询不到到，则创建记录</span><br>                r1 = Read(uesrname=username, bookname=book_id, zjid=movie_id)  <span class="hljs-comment"># # 创建一个 Read 记录</span><br>                db.session.add(r1)  <span class="hljs-comment"># 把新创建的记录添加到数据库会话</span><br>                db.session.commit()  <span class="hljs-comment"># 提交数据库会话，只需要在最后调用一次即可</span><br><br>                <span class="hljs-comment"># 更新</span><br>                xj_ids = Read.query.filter_by(uesrname=username, bookname=book_id).first()<br>                xj_ids.zjid = movie_id<br>                db.session.commit()  <span class="hljs-comment"># 注意仍然需要调用这一行来提交改动</span><br><br>    txt_mun = movie_id * <span class="hljs-number">100</span><br>    <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&#x27;home.html&#x27;</span>, book_id=book_id, movie_id=movie_id, contents=txts[txt_mun-<span class="hljs-number">100</span>:txt_mun])<br><br><br><span class="hljs-meta">@app.errorhandler(<span class="hljs-params"><span class="hljs-number">404</span></span>)  </span><span class="hljs-comment"># 传入要处理的错误代码</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">page_not_found</span>(<span class="hljs-params">e</span>):</span>  <span class="hljs-comment"># 接受异常对象作为参数</span><br>    <span class="hljs-keyword">return</span> render_template(<span class="hljs-string">&#x27;404.html&#x27;</span>), <span class="hljs-number">404</span>  <span class="hljs-comment"># 返回模板和状态码</span><br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    server = pywsgi.WSGIServer((<span class="hljs-string">&#x27;0.0.0.0&#x27;</span>, <span class="hljs-number">5000</span>), app)<br>    server.serve_forever()<br></code></pre></td></tr></table></figure><blockquote><p>提示 你可以在 <a href="https://github.com/qiuliqi/my-bookshelf">GitHub</a> 上查看完整项目</p></blockquote><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>把所有代码放在 app.py 里会让后续的开发和维护变得麻烦，但是我太懒了，觉得重构代码更麻烦，就没有使用包组织代码了…</p>]]></content>
    
    
    
    <tags>
      
      <tag>python3</tag>
      
      <tag>flask</tag>
      
      <tag>小说书架</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>新年快乐！</title>
    <link href="/2025/01/05/xqqxnkl/"/>
    <url>/2025/01/05/xqqxnkl/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="过年"><a href="#过年" class="headerlink" title="过年"></a>过年</h2><p>不知不觉又要过年了，先祝大家新年快乐！</p><p>然后是这一年的总结，这一年过的太快了。。。</p><p>新的一年，加油！</p><h2 id="结婚"><a href="#结婚" class="headerlink" title="结婚"></a>结婚</h2><p>新年快乐！虽然目前我还享受着单身的自由时光。</p>]]></content>
    
    
    
    <tags>
      
      <tag>小年</tag>
      
      <tag>快乐</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>猫盘nas</title>
    <link href="/2025/01/05/xqqnas/"/>
    <url>/2025/01/05/xqqnas/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="猫盘nas"><a href="#猫盘nas" class="headerlink" title="猫盘nas"></a>猫盘nas</h2><p>有一段时间突然很想要一个自己的存储，不知道是因为手机没空间了</p><p>还是因为某个大佬向我炫耀他的那几十个T的存储空间。。。</p><p>看了好多产品，最心动的还是华为的家庭储存，我是华为手机可以直接扩容相册</p><p>但最终还是看上了闲鱼的猫盘，因为体积小便宜</p><p>然后在京东买了一块4T的硬盘，也是用上了nas</p><p>刷黑群晖也比较简单，网上好多教程</p><h2 id="使用体验"><a href="#使用体验" class="headerlink" title="使用体验"></a>使用体验</h2><p>开始还是比较新奇的，把我照片视频全部上传了</p><p>然后手机上看啊，电脑上查看啊，效果还行吧</p><p>到现在已经不怎么玩了，只做一个手机备份的功能用</p><p>为什么？</p><p>因为没有替换我手机自带的相册，也没有解决我手机空间问题</p>]]></content>
    
    
    
    <tags>
      
      <tag>nas</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>新年快乐！</title>
    <link href="/2024/02/03/xnkl/"/>
    <url>/2024/02/03/xnkl/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="过年"><a href="#过年" class="headerlink" title="过年"></a>过年</h2><p>不知不觉又要过年了，先祝大家新年快乐！</p><p>然后是这一年的总结，这一年因为要换工作（上一份工作太安逸了也没钱），感觉啥也没搞到，钱没赚到，女朋友也没有。</p><p>所以行业一定要选好，现在换行业太难了，等再老一点更换不动了。</p><p>现在是换到医疗器械，都说挺好的工作。就是还没入门，太难了。。。</p><p>新的一年，加油！</p><h2 id="结婚"><a href="#结婚" class="headerlink" title="结婚"></a>结婚</h2><p>过年也代表着要结婚了，好多亲戚都问我结婚、催我结婚，只能说难啊！</p><p>有个姨问我有目标没？我表示没有</p><p>“那差的远哦，目标都没有，怎么到结婚。”</p><p>确实是没有想谈女朋友的目标，不知道为啥子，可能是单身久了。。。</p>]]></content>
    
    
    
    <tags>
      
      <tag>小年</tag>
      
      <tag>快乐</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>时隔半年，我回来了</title>
    <link href="/2023/04/22/newshexo/"/>
    <url>/2023/04/22/newshexo/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="123"><a href="#123" class="headerlink" title="123"></a>123</h2><p>自从改用hexo以后，感觉我的小窝就在流浪了，平时没什么想说的，等想要更新一点东西的时候，却发现找不到hexo文件在哪了。。。</p><p>第一次流浪的最彻底，什么都没有备份，只能重新再写一遍文章了</p><p>这次还好，我有备份，可惜也不是最新的备份</p><p>不过还好，已经有经验了 git&gt;node&gt;hexo很快就搞好了</p><h2 id="二十六七八"><a href="#二十六七八" class="headerlink" title="二十六七八"></a>二十六七八</h2><p>不知不觉就到了，可还是很迷茫</p><p>看不到前面的路啊，该怎么走啊</p><p>前几年待在安逸的地方，一晃就过去了</p><p>今年已经换地方了，加油</p>]]></content>
    
    
    
    <tags>
      
      <tag>无聊</tag>
      
      <tag>躺</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>有序队列：queue</title>
    <link href="/2023/04/22/youxu/"/>
    <url>/2023/04/22/youxu/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="有序队列：queue"><a href="#有序队列：queue" class="headerlink" title="有序队列：queue"></a>有序队列：queue</h2><p>在大佬博客发现的这个有序队列，挺有意思的</p><p>Python queue模块的FIFO队列先进先出。 queue.Queue(maxsize)</p><p>LIFO类似于堆，即先进后出。 queue.LifoQueue(maxsize)</p><p>还有一种是优先级队列级别越低越先出来。 queue.PriorityQueue(maxsize)</p><h2 id="queue-PriorityQueue-maxsize"><a href="#queue-PriorityQueue-maxsize" class="headerlink" title="queue.PriorityQueue(maxsize)"></a>queue.PriorityQueue(maxsize)</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><code class="hljs stylus">import queue<br><br><span class="hljs-selector-tag">q</span> = queue<span class="hljs-selector-class">.PriorityQueue</span>(<span class="hljs-number">5</span>)<br><span class="hljs-selector-tag">q</span><span class="hljs-selector-class">.put</span>((<span class="hljs-number">5</span>, <span class="hljs-number">5454</span>))<br><span class="hljs-selector-tag">q</span><span class="hljs-selector-class">.put</span>((<span class="hljs-number">2</span>, <span class="hljs-number">532566</span>))<br><span class="hljs-selector-tag">q</span><span class="hljs-selector-class">.put</span>((<span class="hljs-number">3</span>, <span class="hljs-number">555</span>))<br><span class="hljs-selector-tag">q</span><span class="hljs-selector-class">.put</span>((<span class="hljs-number">7</span>, <span class="hljs-number">344</span>))<br><span class="hljs-function"><span class="hljs-title">print</span><span class="hljs-params">(q.get()</span></span>)<br><span class="hljs-function"><span class="hljs-title">print</span><span class="hljs-params">(q.get()</span></span>)<br><br>-----------<br>(<span class="hljs-number">2</span>, <span class="hljs-number">532566</span>)<br>(<span class="hljs-number">3</span>, <span class="hljs-number">555</span>)<br></code></pre></td></tr></table></figure><h2 id="我的py"><a href="#我的py" class="headerlink" title="我的py"></a>我的py</h2><p>按小说章节ID排序（1, ‘…’）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">from</span> lxml <span class="hljs-keyword">import</span> etree<br><span class="hljs-keyword">from</span> multiprocessing.dummy <span class="hljs-keyword">import</span> Pool <span class="hljs-keyword">as</span> ThreadPool<br><span class="hljs-keyword">from</span> urllib.parse <span class="hljs-keyword">import</span> urljoin<br><span class="hljs-keyword">from</span> queue <span class="hljs-keyword">import</span> PriorityQueue<br><br><span class="hljs-comment"># 有序队列，可以全局使用, 用来储存章节内容</span><br>queue = PriorityQueue()<br><span class="hljs-comment"># 目录页url</span><br>start_url = <span class="hljs-string">&#x27;http://www.ybiquge.com/95_95524/&#x27;</span><br>headers = &#123;<br>    <span class="hljs-string">&#x27;Accept&#x27;</span>: <span class="hljs-string">&#x27;text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9&#x27;</span>,<br>    <span class="hljs-string">&#x27;Accept-Language&#x27;</span>: <span class="hljs-string">&#x27;zh-CN,zh;q=0.9,en;q=0.8&#x27;</span>,<br>    <span class="hljs-string">&#x27;user-agent&#x27;</span>: <span class="hljs-string">&#x27;Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36&#x27;</span><br>&#125;<br><br><br><span class="hljs-comment"># getURL</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_url</span>(<span class="hljs-params">url</span>):</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;访问url：&#123;&#125;&quot;</span>.<span class="hljs-built_in">format</span>(url))<br>    <span class="hljs-keyword">try</span>:<br>        res = requests.get(url, headers)<br>        <span class="hljs-comment"># tree = etree.HTML(res)</span><br>        <span class="hljs-keyword">return</span> res.text<br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br><br><br><span class="hljs-comment"># 获取小说章节链接</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_page</span>():</span><br>    <span class="hljs-comment"># get</span><br>    page_html = get_url(start_url)<br>    <span class="hljs-keyword">if</span> page_html:<br>        <span class="hljs-comment"># lxml解析</span><br>        page_tree = etree.HTML(page_html)<br>        <span class="hljs-comment"># 书名</span><br>        book_name = page_tree.xpath(<span class="hljs-string">&#x27;//div[@id=&quot;info&quot;]/h1/text()&#x27;</span>)[<span class="hljs-number">0</span>]<br>        <span class="hljs-built_in">print</span>(book_name)<br>        <span class="hljs-comment"># 章节链接</span><br>        page_url_lists = page_tree.xpath(<span class="hljs-string">&#x27;//div[@id=&quot;list&quot;]/dl/dd/a/@href&#x27;</span>)<br>        <span class="hljs-keyword">return</span> book_name, page_url_lists<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br><br><br><span class="hljs-comment"># 获取小说内容</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_text</span>(<span class="hljs-params">url</span>):</span><br>    <span class="hljs-comment"># 先拼接URL</span><br>    url = urljoin(start_url, url)<br>    <span class="hljs-comment"># get</span><br>    zj_html = get_url(url)<br>    <span class="hljs-keyword">if</span> zj_html:<br>        <span class="hljs-comment"># lxml解析</span><br>        page_tree = etree.HTML(zj_html)<br>        <span class="hljs-comment"># 章节名</span><br>        zj_name = page_tree.xpath(<span class="hljs-string">&#x27;//div[@class=&quot;bookname&quot;]/h1/text()&#x27;</span>)[<span class="hljs-number">0</span>]<br>        <span class="hljs-built_in">print</span>(zj_name)<br>        <span class="hljs-comment"># 内容</span><br>        zj_text_list = page_tree.xpath(<span class="hljs-string">&#x27;//div[@id=&quot;content&quot;]/text()&#x27;</span>)<br>        <span class="hljs-comment"># 遍历合并内容</span><br>        zj_text = <span class="hljs-string">&#x27;&#x27;</span><br>        <span class="hljs-keyword">for</span> text <span class="hljs-keyword">in</span> zj_text_list:<br>            zj_text = zj_text + text + <span class="hljs-string">&#x27;\n&#x27;</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;内容:&#x27;</span>, zj_text[<span class="hljs-number">0</span>:<span class="hljs-number">15</span>], <span class="hljs-string">&#x27;...&#x27;</span>)<br>        <span class="hljs-comment"># 有序列队提交</span><br>        <span class="hljs-comment"># 匹配章节id</span><br>        zj_id = url.split(<span class="hljs-string">&#x27;/&#x27;</span>)[-<span class="hljs-number">1</span>].replace(<span class="hljs-string">&#x27;.html&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>)<br>        <span class="hljs-comment"># 开始提交, 序号+内容</span><br>        queue.put((<span class="hljs-built_in">int</span>(zj_id), zj_name+<span class="hljs-string">&#x27;\n&#x27;</span>+zj_text+<span class="hljs-string">&#x27;\n&#x27;</span>))<br>        <span class="hljs-comment"># 设置延迟（理性一点）</span><br>        time.sleep(<span class="hljs-number">1</span>)<br><br><br><span class="hljs-comment"># 下载</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">down_text</span>(<span class="hljs-params">name, texts</span>):</span><br>    path = name + <span class="hljs-string">&#x27;.txt&#x27;</span><br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(path, <span class="hljs-string">&#x27;a&#x27;</span>, encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>) <span class="hljs-keyword">as</span> a:<br>        a.writelines(texts)<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    start_time = time.time()<br>    <span class="hljs-comment"># 获取小说名字，章节链接list</span><br>    xs_book_name, zj_lists = get_page()<br>    <span class="hljs-comment"># 实例化 Pool 对象,设置线程4</span><br>    pool = ThreadPool(<span class="hljs-number">4</span>)<br>    <span class="hljs-comment"># 设置任务</span><br>    pool.<span class="hljs-built_in">map</span>(get_text, zj_lists)<br>    <span class="hljs-comment"># 关闭线程</span><br>    pool.close()<br>    pool.join()<br>    <span class="hljs-comment"># 有序获取章节内容</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;正在保存小说，请稍后...&quot;</span>)<br>    content = <span class="hljs-string">&quot;&quot;</span><br>    <span class="hljs-comment"># queue.empty() 如果队列为空，返回True</span><br>    <span class="hljs-keyword">while</span> <span class="hljs-keyword">not</span> queue.empty():<br>        <span class="hljs-comment"># get有序获取</span><br>        next_obj = queue.get()<br>        <span class="hljs-comment"># print(next_obj[0])</span><br>        content += next_obj[<span class="hljs-number">1</span>]<br>    <span class="hljs-comment"># 保存</span><br>    down_text(xs_book_name, content)<br>    <span class="hljs-built_in">print</span>(xs_book_name, <span class="hljs-string">&quot;下载完成！&quot;</span>)<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;共用时：&quot;</span>, time.time()-start_time)<br></code></pre></td></tr></table></figure><h2 id="写在后面"><a href="#写在后面" class="headerlink" title="写在后面"></a>写在后面</h2><p>不知不觉写了好多下载小说的py了</p><p>爱好看小说，没别的意思！</p>]]></content>
    
    
    
    <tags>
      
      <tag>python3</tag>
      
      <tag>queue</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>长期单身的状态</title>
    <link href="/2023/04/20/dangshendog/"/>
    <url>/2023/04/20/dangshendog/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="随便聊聊"><a href="#随便聊聊" class="headerlink" title="随便聊聊"></a>随便聊聊</h2><p>前几天和同事聊天，问我单身这么多年是什么感觉？有没有什么想法？</p><p>我的回答是没什么想法</p><p>那长期单身是什么的状态呢？</p><p>就是游戏也打腻了</p><p>微信也不弹消息</p><p>每天刷着b站</p><p>时而被文案触动</p><p>时而被视频虐狗</p><p>虽然孤独，但不想找</p><p>喜欢我的没有</p><p>我喜欢的，不喜欢我</p><p>和刚认识的女生</p><p>聊几句天，就把天聊死了</p><p>感觉，自己失去了爱的能力</p><p>其实也不是不想谈恋爱</p><p>有的时候是害怕</p><p>怕渣女，怕彩礼</p><p>怕被辜负</p><p>怕没钱让她受委屈</p><p>因为没有把握留在一个人</p><p>所以才没有勇气理直气壮的说</p><p>跟着我一定会让你幸福</p><p>所以宁愿单身</p><p>抓不住的东西</p><p>连伸手都是多余的</p><p>2022.2.16</p><h2 id="来听首歌吧！"><a href="#来听首歌吧！" class="headerlink" title="来听首歌吧！"></a>来听首歌吧！</h2><iframe src="//player.bilibili.com/player.html?aid=509077745&bvid=BV1Vu411R7wg&cid=508654716&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true" width='100%' height='100%'> </iframe><p>转载来自b站up主鬼山哥的作品</p>]]></content>
    
    
    
    <tags>
      
      <tag>单身</tag>
      
      <tag>狗</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>我这是怎么了</title>
    <link href="/2021/11/02/rji-1102/"/>
    <url>/2021/11/02/rji-1102/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><h2 id="小记"><a href="#小记" class="headerlink" title="小记"></a>小记</h2><p>那是一个星期天的晚上，差不多10点左右吧，在网吧奋战一天的我和小刘终是下机了。</p><p>和往常一样，大都是一样的，周一至周六上班，星期天都是在网吧度过，虚度光阴也好，沉迷游戏也罢，都是自己的喜好。</p><p>走在外面的街道，却还在复盘着今天的战斗，哪路玩的很好，哪路十分的坑，他大底是玩的很好的，我玩的是辅助</p><p>慢慢快走到小区门口了，门口见两个小姐姐拿着门禁在刷，那机器只是发出滴滴两声，却并不开门，应该是坏了吧！</p><p>要不要去帮忙？我有点犹豫，心里想着还要去小卖部买点东西的。</p><p>旁边小刘走了过去，拿着自己的门禁帮忙开门，并告诉她们要去小区那里激活。</p><p>是因为内向吗？还在只因为她们是女孩子？</p><p>我应该是怕了，不知为何，当我遇到小姐姐的第一反应竟然是害怕的。</p><p>不想有过多交际，这是害羞吗？</p><p>我应该是废了</p><p align="right">2021.11.2</p>]]></content>
    
    
    
    <tags>
      
      <tag>日记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>python3多线程下载视频</title>
    <link href="/2021/09/18/thread/"/>
    <url>/2021/09/18/thread/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>随着要下载的视频越来越多，突然发现我之前写的那个m3u8下载速度太慢了…</p><p>刚好在公众号<a href="https://mp.weixin.qq.com/s/97cY7NNnZOyG46bWQUaGTQ">简说python</a>上看到一个多线程教程，就来试试用多线程下载一下吧！</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>多线程是用threading库来实现，基础的比较简单，主要是要注意限制线程数量</p><p><img src="https://cdn.jsdelivr.net/gh/qiuliqi/qiuliqi.github.io@master/img/20210918151954.png"></p><p>群里开车现在都是发一堆二维码,所以还得用个二维码识别zxing库</p><p>把二维码都保存在一个文件夹，然后启动py，选择这个文件夹就可以自动下载啦！</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> requests<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">import</span> threading<br><span class="hljs-keyword">from</span> faker <span class="hljs-keyword">import</span> Faker<br><span class="hljs-keyword">from</span> tkinter <span class="hljs-keyword">import</span> filedialog<br><span class="hljs-keyword">from</span> tkinter <span class="hljs-keyword">import</span> messagebox<br><span class="hljs-keyword">import</span> os<br><span class="hljs-keyword">import</span> zxing<br><br><br><span class="hljs-comment"># 初始化</span><br>fake = Faker()<br><br><br><span class="hljs-comment"># 获取m3u8下载链接</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_ts_urls</span>(<span class="hljs-params">m3u8_index</span>):</span><br>    <span class="hljs-comment"># 储存m3u8链接</span><br>    m3u8_url_list = []<br><br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-comment"># 定义请求头</span><br>        headers = &#123;<span class="hljs-string">&#x27;User-Agent&#x27;</span>: fake.user_agent()&#125;<br>        <span class="hljs-comment"># get获取</span><br>        m3u8s = requests.get(m3u8_index, headers).text<br>        <span class="hljs-comment"># 拆分</span><br>        m3u8s = m3u8s.strip()<br>        m3u8s = m3u8s.split(<span class="hljs-string">&#x27;\n&#x27;</span>)<br>        <span class="hljs-comment"># print(m3u8s)</span><br>        <span class="hljs-keyword">for</span> m3u8 <span class="hljs-keyword">in</span> m3u8s:<br>            <span class="hljs-comment"># print(m3u8)</span><br>            <span class="hljs-comment"># 判断 #</span><br>            <span class="hljs-keyword">if</span> m3u8.find(<span class="hljs-string">&#x27;#&#x27;</span>) == -<span class="hljs-number">1</span>:<br>                <span class="hljs-comment"># print(m3u8)</span><br>                <span class="hljs-comment"># 获取前缀</span><br>                m3u8_server = url_m3u8_index.replace(url_m3u8_index.split(<span class="hljs-string">&#x27;/&#x27;</span>)[-<span class="hljs-number">1</span>], <span class="hljs-string">&#x27;&#x27;</span>)<br>                <span class="hljs-comment"># 合并</span><br>                m3u8_url = m3u8_server + m3u8<br>                <span class="hljs-comment"># print(m3u8_url)</span><br>                <span class="hljs-comment"># 添加到 list</span><br>                m3u8_url_list.append(m3u8_url)<br>        <span class="hljs-built_in">print</span>(m3u8_url_list)<br>        <span class="hljs-keyword">return</span> m3u8_url_list<br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;url访问出错&#x27;</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br><br><br><span class="hljs-comment"># 下载视频</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">down_m3u8</span>(<span class="hljs-params">url</span>):</span><br>    <span class="hljs-keyword">try</span>:<br>        <span class="hljs-comment"># 定义随机请求头</span><br>        headers = &#123;<span class="hljs-string">&#x27;User-Agent&#x27;</span>: fake.user_agent()&#125;<br>        res = requests.get(url, headers).content<br>        <span class="hljs-keyword">try</span>:<br>            os.mkdir(<span class="hljs-string">&#x27;临时下载文件夹&#x27;</span>)<br>        <span class="hljs-keyword">except</span>:<br>            <span class="hljs-keyword">pass</span><br>        ts_name = <span class="hljs-string">&#x27;临时下载文件夹/&#x27;</span> + url.split(<span class="hljs-string">&#x27;/&#x27;</span>)[-<span class="hljs-number">1</span>]<br>        ts_names.append(ts_name)<br>        <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(ts_name, <span class="hljs-string">&#x27;wb&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>            f.write(res)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;开始下载&#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(ts_name))<br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-keyword">pass</span><br>    <span class="hljs-comment"># 线程结束锁</span><br>    pool_sema.release()<br><br><br><span class="hljs-comment"># 合并视频</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">mg_vd</span>():</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;合并视频中...&#x27;</span>)<br>    t = time.strftime(<span class="hljs-string">&quot;%Y.%m.%d.%H.%M.%S&quot;</span>, time.localtime())<br>    file_path = <span class="hljs-built_in">str</span>(t) + <span class="hljs-string">&#x27;.ts&#x27;</span><br>    <span class="hljs-comment"># 先排序</span><br>    sd_ts_names = <span class="hljs-built_in">sorted</span>(ts_names)<br>    <span class="hljs-built_in">print</span>(sd_ts_names)<br>    <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(file_path, <span class="hljs-string">&#x27;wb&#x27;</span>) <span class="hljs-keyword">as</span> fl:<br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> sd_ts_names:<br>            fl.write(<span class="hljs-built_in">open</span>(i, <span class="hljs-string">&#x27;rb&#x27;</span>).read())<br>            <span class="hljs-comment"># 删除原视频</span><br>            os.remove(i)<br>        <span class="hljs-comment"># 删除文件夹</span><br>        <span class="hljs-keyword">try</span>:<br>            os.rmdir(<span class="hljs-string">&#x27;临时下载文件夹&#x27;</span>)<br>        <span class="hljs-keyword">except</span>:<br>            <span class="hljs-keyword">pass</span><br><br><br><span class="hljs-comment"># 识别二维码</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">dg_code</span>():</span><br>    <span class="hljs-comment"># 创建识别到的链接list</span><br>    urls = []<br>    <span class="hljs-comment"># 获取二维码储存文件夹</span><br>    thread1 = threading.Thread(target=read_dir)<br>    thread1.start()<br>    thread1.join()<br>    <span class="hljs-comment"># 遍历文件夹</span><br>    code_path = code_paths[<span class="hljs-number">0</span>]<br>    imgs = os.listdir(code_path)<br>    <span class="hljs-comment"># print(imgs)</span><br>    <span class="hljs-keyword">for</span> img <span class="hljs-keyword">in</span> imgs:<br>        img_path = os.path.join(code_path, img)<br>        <span class="hljs-comment"># 开始识别二维码</span><br>        reader = zxing.BarCodeReader()<br>        barcode = reader.decode(img_path)<br>        url = barcode.parsed<br>        <span class="hljs-comment"># print(url)</span><br>        <span class="hljs-comment"># 加入list</span><br>        urls.append(url)<br><br>    <span class="hljs-built_in">print</span>(urls)<br>    <span class="hljs-keyword">return</span> urls<br><br><br><span class="hljs-comment"># 读取文件夹</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">read_dir</span>():</span><br>    <span class="hljs-comment"># 选择二维码所在文件夹</span><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;请先选择二维码所在的文件夹&#x27;</span>)<br>    code_path = filedialog.askdirectory()  <span class="hljs-comment"># 选择文件夹，路径保存于foldr_patch中</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> code_path:<br>        messagebox.showerror(<span class="hljs-string">&quot;提示&quot;</span>, <span class="hljs-string">&quot;请先选择二维码所在的文件夹&quot;</span>)<br>        read_dir()<br>    <span class="hljs-keyword">else</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;选择文件夹：&#123;&#125;&#x27;</span>.<span class="hljs-built_in">format</span>(code_path))<br>        code_paths.append(code_path)<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    <span class="hljs-comment"># m3u8url</span><br>    <span class="hljs-comment"># 识别二维码</span><br>    code_paths = []<br>    urls_m3u8_index = dg_code()<br>    <span class="hljs-keyword">for</span> url_m3u8_index <span class="hljs-keyword">in</span> urls_m3u8_index:<br>        <span class="hljs-comment"># 获取下载url</span><br>        m3u8_urls = get_ts_urls(url_m3u8_index)<br>        <span class="hljs-comment"># 储存临时视频路径list</span><br>        ts_names = []<br>        <span class="hljs-keyword">if</span> m3u8_urls:<br>            <span class="hljs-comment"># print(m3u8_urls)</span><br>            <span class="hljs-comment"># 线程list</span><br>            thread_list = []<br>            <span class="hljs-comment"># 管理线程数</span><br>            max_connections = <span class="hljs-number">5</span><br>            pool_sema = threading.BoundedSemaphore(max_connections)<br><br>            <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> m3u8_urls:<br>                <span class="hljs-comment"># 线程开始锁</span><br>                pool_sema.acquire()<br>                thread = threading.Thread(target=down_m3u8, args=[i])<br>                thread.start()<br>                thread_list.append(thread)<br><br>            <span class="hljs-keyword">for</span> t <span class="hljs-keyword">in</span> thread_list:<br>                t.join()<br><br>            <span class="hljs-comment"># 合并视频</span><br>            mg_vd()<br><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;下载完成&#x27;</span>)<br></code></pre></td></tr></table></figure><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>仅供学习交流，咳咳咳</p>]]></content>
    
    
    
    <tags>
      
      <tag>python3</tag>
      
      <tag>m3u8</tag>
      
      <tag>多线程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>b站每天自动投币三连，轻松获取60经验值</title>
    <link href="/2021/08/04/blbltb/"/>
    <url>/2021/08/04/blbltb/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>今天在玩b站的时候发现自己快要到6级大佬了，小本本计算一下，也就差个5千多经验…</p><p><img src="https://cdn.jsdelivr.net/gh/qiuliqi/qiuliqi.github.io@master/img/20210804111647.png"></p><p>可是自己白嫖习惯了，也不怎么投币，所以等级升的非常慢，和我一起入学的都已经是6级大佬了</p><p>看了一下b站的升级任务，每天投币是不能少的，刚好最近对selenium玩的比较嗨，就想做一个每天自动帮我投币的py</p><p><img src="https://cdn.jsdelivr.net/gh/qiuliqi/qiuliqi.github.io@master/img/20210804105703.png"></p><h2 id="想要的功能"><a href="#想要的功能" class="headerlink" title="想要的功能"></a>想要的功能</h2><p>1.自动登录b站</p><p>2.随机观看几个视频并且帮我投币</p><h2 id="我写的代码"><a href="#我写的代码" class="headerlink" title="我写的代码"></a>我写的代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> selenium <span class="hljs-keyword">import</span> webdriver<br><span class="hljs-keyword">from</span> selenium.webdriver.common.by <span class="hljs-keyword">import</span> By<br><span class="hljs-keyword">from</span> selenium.webdriver.support <span class="hljs-keyword">import</span> expected_conditions <span class="hljs-keyword">as</span> EC<br><span class="hljs-keyword">from</span> selenium.webdriver.support.wait <span class="hljs-keyword">import</span> WebDriverWait<br><span class="hljs-keyword">from</span> selenium.webdriver <span class="hljs-keyword">import</span> ActionChains<br><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">from</span> PIL <span class="hljs-keyword">import</span> Image<br><span class="hljs-keyword">import</span> json<br><span class="hljs-keyword">import</span> random<br><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CrackSlider</span>():</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self</span>):</span><br>        <span class="hljs-built_in">super</span>(CrackSlider, self).__init__()<br>        <span class="hljs-comment"># 初始 url</span><br>        self.start_url = <span class="hljs-string">&#x27;https://www.bilibili.com/&#x27;</span><br>        <span class="hljs-comment"># 登录 url</span><br>        self.login_url = <span class="hljs-string">&#x27;https://passport.bilibili.com/login&#x27;</span><br>        <span class="hljs-comment"># 此步骤很重要，设置为开发者模式，防止被各大网站识别出来</span><br>        self.options = webdriver.ChromeOptions()<br>        self.options.add_experimental_option(<span class="hljs-string">&#x27;excludeSwitches&#x27;</span>, [<span class="hljs-string">&#x27;enable-automation&#x27;</span>])<br>        self.options.add_experimental_option(<span class="hljs-string">&#x27;useAutomationExtension&#x27;</span>, <span class="hljs-literal">False</span>)<br>        <span class="hljs-comment"># 设置无头模式，就是不显示浏览器，测试时可以注释掉</span><br>        self.options.add_argument(<span class="hljs-string">&#x27;--headless&#x27;</span>)<br><br>        self.driver = webdriver.Chrome(options=self.options)<br>        self.driver.execute_cdp_cmd(<span class="hljs-string">&#x27;Page.addScriptToEvaluateOnNewDocument&#x27;</span>, &#123;<br>            <span class="hljs-string">&#x27;source&#x27;</span>: <span class="hljs-string">&#x27;Object.defineProperty(navigator, &quot;webdriver&quot;, &#123;get: () =&gt; undefined&#125;)&#x27;</span><br>        &#125;)<br>        self.driver.set_window_size(<span class="hljs-number">1366</span>, <span class="hljs-number">768</span>)<br>        <span class="hljs-comment"># self.driver.maximize_window()  # 全屏</span><br>        <span class="hljs-comment"># 等待加载元素，最多10s</span><br>        self.wait = WebDriverWait(self.driver, <span class="hljs-number">10</span>)<br><br>    <span class="hljs-comment"># 获取并保存cookie</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">save_cookie</span>(<span class="hljs-params">self</span>):</span><br>        self.driver.get(self.login_url)<br>        <span class="hljs-comment"># 网页元素截图</span><br>        usercode_img = WebDriverWait(self.driver, <span class="hljs-number">20</span>).until(<br>            EC.presence_of_element_located(<br>                (By.CLASS_NAME, <span class="hljs-string">&#x27;qrcode-img&#x27;</span>)<br>            )<br>        )<br>        self.driver.save_screenshot(<span class="hljs-string">&#x27;screenshot.png&#x27;</span>) <span class="hljs-comment"># 截全图</span><br>        left = usercode_img.location[<span class="hljs-string">&#x27;x&#x27;</span>]<br>        top = usercode_img.location[<span class="hljs-string">&#x27;y&#x27;</span>]<br>        rigth = usercode_img.location[<span class="hljs-string">&#x27;x&#x27;</span>] + usercode_img.size[<span class="hljs-string">&#x27;width&#x27;</span>]<br>        bottom = usercode_img.location[<span class="hljs-string">&#x27;y&#x27;</span>] + usercode_img.size[<span class="hljs-string">&#x27;height&#x27;</span>]<br><br>        im = Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;screenshot.png&#x27;</span>)<br>        im = im.crop((left, top, rigth, bottom)) <span class="hljs-comment"># 对浏览器截图进行裁剪</span><br>        im.save(<span class="hljs-string">&#x27;vcode.png&#x27;</span>)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;请扫码登录&#x27;</span>)<br>        time.sleep(<span class="hljs-number">2</span>)<br>        <span class="hljs-comment"># 打开图片扫码登录</span><br>        img=Image.<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;vcode.png&#x27;</span>)<br>        img.show()<br>        <span class="hljs-comment"># 检测是否登录成功</span><br>        current_url = self.login_url<br>        <span class="hljs-keyword">while</span> current_url:<br>            <span class="hljs-keyword">if</span> self.driver.current_url != current_url:<br>                current_url = <span class="hljs-literal">False</span><br>            time.sleep(<span class="hljs-number">3</span>)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;登录成功，正在保存cookies&#x27;</span>)<br>        cookies = self.driver.get_cookies()<br>        json_cookies = json.dumps(cookies)<br>        <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;cookies_blbl.json&#x27;</span>, <span class="hljs-string">&#x27;w&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>            f.write(json_cookies)<br><br>    <span class="hljs-comment"># 读取cookies</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">add_cookie</span>(<span class="hljs-params">self</span>):</span><br>        self.driver.delete_all_cookies()<br>        <span class="hljs-keyword">try</span>:<br>            <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;cookies_blbl.json&#x27;</span>, <span class="hljs-string">&#x27;r&#x27;</span>, encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>                list_cookies = json.loads(f.read())<br>                <span class="hljs-comment"># print(list_cookies)</span><br>                <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> list_cookies:<br>                    self.driver.add_cookie(i)<br>        <span class="hljs-keyword">except</span>:<br>            self.save_cookie()<br><br>    <span class="hljs-comment"># 登录</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">logo</span>(<span class="hljs-params">self</span>):</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;开始登录中...&#x27;</span>)<br>        self.driver.get(self.login_url)<br>        self.add_cookie()<br>        self.driver.get(self.start_url)<br>        time.sleep(<span class="hljs-number">3</span>)<br>        <span class="hljs-comment"># 检测是否登录成功</span><br>        <span class="hljs-keyword">if</span> self.driver.current_url != self.start_url:<br>            self.save_cookie()<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;使用cookies登录成功&#x27;</span>)<br><br>    <span class="hljs-comment"># 随机看视频</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">look_b</span>(<span class="hljs-params">self</span>):</span><br>        sp_list = []<br>        self.driver.get(<span class="hljs-string">&#x27;https://www.bilibili.com/v/popular/rank/all&#x27;</span>)<br>        time.sleep(<span class="hljs-number">3</span>)<br>        sps = self.driver.find_elements_by_xpath(<span class="hljs-string">&#x27;//ul[@class=&quot;rank-list&quot;]/li/div[2]/div[2]/a&#x27;</span>)<br>        <span class="hljs-keyword">for</span> sp <span class="hljs-keyword">in</span> sps:<br>            sp_url = sp.get_attribute(<span class="hljs-string">&#x27;href&#x27;</span>)<br>            <span class="hljs-comment"># print(sp_url)</span><br>            sp_list.append(sp_url)<br>        <span class="hljs-comment"># 随机观看6个视频</span><br>        <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">7</span>):<br>            <span class="hljs-comment"># 随机数</span><br>            sjh = random.randint(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(sp_list) - <span class="hljs-number">1</span>)<br>            self.driver.get(sp_list[sjh])<br>            <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;开始前往&#123;&#125;看视频三连&#x27;</span>.<span class="hljs-built_in">format</span>(sp_list[sjh]))<br>            <span class="hljs-comment"># 随机时间三连</span><br>            time.sleep(random.randint(<span class="hljs-number">5</span>,<span class="hljs-number">10</span>))<br>            <span class="hljs-comment"># 点赞按钮</span><br>            spot = self.driver.find_element_by_id(<span class="hljs-string">&#x27;arc_toolbar_report&#x27;</span>).find_element_by_class_name(<span class="hljs-string">&#x27;like&#x27;</span>)<br>            <span class="hljs-comment"># 鼠标左键按下不动</span><br>            ActionChains(self.driver).click_and_hold(spot).perform()<br>            time.sleep(<span class="hljs-number">5</span>)<br>            <span class="hljs-comment"># 释放左键</span><br>            ActionChains(self.driver).release(spot).perform()<br>            <span class="hljs-comment"># 观看时长</span><br>            time.sleep(random.randint(<span class="hljs-number">30</span>, <span class="hljs-number">60</span>))<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    c = CrackSlider()<br>    <span class="hljs-comment"># 登录</span><br>    c.logo()<br>    <span class="hljs-comment"># 随机看视频</span><br>    c.look_b()<br><br></code></pre></td></tr></table></figure><h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs vim">安装 <span class="hljs-keyword">python3</span>.<span class="hljs-number">7</span>+<br>安装 selenium等一系列的库，配置好谷歌浏览器的selenium插件，百度就行<br>第一次运行需要自己扫码登录<br>win7设置任务计划，每天运行时间自己设置，电脑不能关机休眠，其他系统自行设置<br>我是用公司的电脑，每天<span class="hljs-number">12</span>点吃饭的空闲时间自动运行<br></code></pre></td></tr></table></figure><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>github有好多云函数运行的项目，不需要电脑，可惜我不会用，就只能用这个自行车了！</p>]]></content>
    
    
    
    <tags>
      
      <tag>selenium</tag>
      
      <tag>哔哩哔哩</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>来看小姐姐跳舞</title>
    <link href="/2021/07/31/xjjtw/"/>
    <url>/2021/07/31/xjjtw/</url>
    
    <content type="html"><![CDATA[<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/hint.css/2.4.1/hint.min.css"><p align="center">一起来看焰灵姬小姐姐的入梦舞-天行九歌</p><video src="https://qiuliqi.top/焰灵姬.mp4" type='video/mp4' controls='controls'  width='100%' height='100%'></video>]]></content>
    
    
    
    <tags>
      
      <tag>小姐姐</tag>
      
      <tag>舞蹈</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Python3下载m3u8</title>
    <link href="/2021/07/29/pym3u8/"/>
    <url>/2021/07/29/pym3u8/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近爬网站视频的时候发现视频都是用m3u8的格式，不能直接下载</p><p>百度借鉴了一下下载方法后，就写了一个适合自己的方法</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>m3u8 文件实质是一个播放列表（playlist），了解这个之后下载就比较简单了。</p><p><img src="https://cdn.jsdelivr.net/gh/qiuliqi/qiuliqi.github.io@master/img/20210729193458.png"></p><p>只需要把列表一个一个合并成url，就可以全部下载，再合并成一个视频</p><p>前提是这个m3u8没有加密，加密什么的太烦了！</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">import</span> requests<br><span class="hljs-attribute">import</span> os<br><span class="hljs-attribute">import</span> time<br><br><br><span class="hljs-comment"># 获取m3u8下载链接</span><br><span class="hljs-attribute">def</span> get_ts_urls(m<span class="hljs-number">3</span>u<span class="hljs-number">8</span>_index):<br>    <span class="hljs-comment"># 储存m3u8链接</span><br>    <span class="hljs-attribute">m3u8_urls</span> =<span class="hljs-meta"> []</span><br>    <span class="hljs-comment"># get获取</span><br>    <span class="hljs-attribute">m3u8s</span> = requests.get(m<span class="hljs-number">3</span>u<span class="hljs-number">8</span>_index).text<br>    <span class="hljs-comment"># 拆分</span><br>    <span class="hljs-attribute">m3u8s</span> = m<span class="hljs-number">3</span>u<span class="hljs-number">8</span>s.strip()<br>    <span class="hljs-attribute">m3u8s</span> = m<span class="hljs-number">3</span>u<span class="hljs-number">8</span>s.split(&#x27;\n&#x27;)<br>    <span class="hljs-comment"># print(m3u8s)</span><br>    <span class="hljs-attribute">for</span> m<span class="hljs-number">3</span>u<span class="hljs-number">8</span> in m<span class="hljs-number">3</span>u<span class="hljs-number">8</span>s:<br>        <span class="hljs-comment"># print(m3u8)</span><br>        <span class="hljs-comment"># 判断 #</span><br>        <span class="hljs-attribute">if</span> m<span class="hljs-number">3</span>u<span class="hljs-number">8</span>.find(&#x27;#&#x27;) == -<span class="hljs-number">1</span>:<br>            <span class="hljs-comment"># print(m3u8)</span><br>            <span class="hljs-comment"># 获取前缀</span><br>            <span class="hljs-attribute">m3u8_server</span> = url_m<span class="hljs-number">3</span>u<span class="hljs-number">8</span>_index.replace(url_m<span class="hljs-number">3</span>u<span class="hljs-number">8</span>_index.split(&#x27;/&#x27;)[-<span class="hljs-number">1</span>], &#x27;&#x27;)<br>            <span class="hljs-comment"># 合并</span><br>            <span class="hljs-attribute">m3u8_url</span> = m<span class="hljs-number">3</span>u<span class="hljs-number">8</span>_server + m<span class="hljs-number">3</span>u<span class="hljs-number">8</span><br>            <span class="hljs-comment"># print(m3u8_url)</span><br>            <span class="hljs-comment"># 添加到 list</span><br>            <span class="hljs-attribute">m3u8_urls</span>.append(m<span class="hljs-number">3</span>u<span class="hljs-number">8</span>_url)<br>    <span class="hljs-attribute">print</span>(m<span class="hljs-number">3</span>u<span class="hljs-number">8</span>_urls)<br>    <span class="hljs-attribute">return</span> m<span class="hljs-number">3</span>u<span class="hljs-number">8</span>_urls<br><br><br><span class="hljs-comment"># 下载视频</span><br><span class="hljs-attribute">def</span> down_m<span class="hljs-number">3</span>u<span class="hljs-number">8</span>(urls):<br>    <span class="hljs-attribute">ts_names</span> =<span class="hljs-meta"> []</span><br>    <span class="hljs-attribute">for</span> url in urls:<br>        <span class="hljs-comment"># print(url)</span><br>        <span class="hljs-attribute">try</span>:<br>            <span class="hljs-attribute">res</span> = requests.get(url).content<br>            <span class="hljs-attribute">try</span>:<br>                <span class="hljs-attribute">os</span>.mkdir(&#x27;临时下载文件夹&#x27;)<br>            <span class="hljs-attribute">except</span>:<br>                <span class="hljs-attribute">pass</span><br>            <span class="hljs-attribute">ts_name</span> = &#x27;临时下载文件夹/&#x27; + url.split(&#x27;/&#x27;)[-<span class="hljs-number">1</span>]<br>            <span class="hljs-attribute">ts_names</span>.append(ts_name)<br>            <span class="hljs-attribute">with</span> open(ts_name, &#x27;wb&#x27;) as f:<br>                <span class="hljs-attribute">f</span>.write(res)<br>            <span class="hljs-attribute">print</span>(&#x27;开始下载&#123;&#125;&#x27;.format(ts_name))<br>        <span class="hljs-attribute">except</span>:<br>            <span class="hljs-attribute">pass</span><br>    <span class="hljs-comment"># 合并视频</span><br>    <span class="hljs-attribute">t</span> = time.strftime(<span class="hljs-string">&quot;%Y%m%d%H%M%S&quot;</span>, time.localtime())<br>    <span class="hljs-attribute">file_path</span> = str(t) + &#x27;.ts&#x27;<br>    <span class="hljs-attribute">with</span> open(file_path, &#x27;wb&#x27;) as fl:<br>        <span class="hljs-attribute">for</span> i in ts_names:<br>            <span class="hljs-attribute">fl</span>.write(open(i, &#x27;rb&#x27;).read())<br>            <span class="hljs-comment"># 删除原视频</span><br>            <span class="hljs-attribute">os</span>.remove(i)<br>        <span class="hljs-comment"># 删除文件夹</span><br>        <span class="hljs-attribute">try</span>:<br>            <span class="hljs-attribute">os</span>.rmdir(&#x27;临时下载文件夹&#x27;)<br>        <span class="hljs-attribute">except</span>:<br>            <span class="hljs-attribute">pass</span><br><br><br><span class="hljs-attribute">if</span> __name__ == &#x27;__main__&#x27;:<br>    <span class="hljs-attribute">url_m3u8_index</span> = &#x27;https://v.jingruila.com/public/videos/<span class="hljs-number">60</span>ef<span class="hljs-number">8</span>b<span class="hljs-number">9</span>e<span class="hljs-number">05097</span>b<span class="hljs-number">2</span>cfd<span class="hljs-number">6</span>e<span class="hljs-number">9071</span>/index.m<span class="hljs-number">3</span>u<span class="hljs-number">8</span>&#x27;<br>    <span class="hljs-attribute">m3u8_urls</span> = get_ts_urls(url_m<span class="hljs-number">3</span>u<span class="hljs-number">8</span>_index)<br>    <span class="hljs-comment"># print(m3u8_urls)</span><br>    <span class="hljs-attribute">down_m3u8</span>(m<span class="hljs-number">3</span>u<span class="hljs-number">8</span>_urls)<br>    <span class="hljs-attribute">print</span>(&#x27;下载完成&#x27;)<br></code></pre></td></tr></table></figure><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>这个方法只适合部分m3u8下载，因为它比较简陋。</p><p>本文有个福利哦，认真学习的同学就能发现。。。</p>]]></content>
    
    
    
    <tags>
      
      <tag>python3</tag>
      
      <tag>m3u8</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>可见即可爬，selenium 爬取js手机网站</title>
    <link href="/2021/07/01/selpa/"/>
    <url>/2021/07/01/selpa/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近发现上次爬的得间小说网站突然更新了，PC端网页只能看前几章，而且网站还用js加载了。</p><p><img src="https://cdn.jsdelivr.net/gh/qiuliqi/qiuliqi.github.io@master/img/20210702100315.png"></p><p>手机访问发现还可以免费观看，网址变成m.idejian.com，但是PC端访问会自动跳转</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>js加载的网站一般request是爬取不到的，就要使用Selenium爬取，Selenium 是一个自动化测试工具，利用它可以驱动浏览器执行特定的动作，如点击、下拉等操作，同时还可以获取浏览器当前呈现的页面源代码，做到可见即可爬。对于一些使用 JavaScript 动态渲染的页面来说，此种抓取方式非常有效</p><p>同时谷歌浏览器F12开发者是可以模拟手机设备访问的，这样Selenium应该也可以，就去找了一下代码</p><p><img src="https://cdn.jsdelivr.net/gh/qiuliqi/qiuliqi.github.io@master/img/20210702100010.png"></p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> selenium <span class="hljs-keyword">import</span> webdriver<br><span class="hljs-keyword">from</span> selenium.webdriver.common.by <span class="hljs-keyword">import</span> By<br><span class="hljs-keyword">from</span> selenium.webdriver.support <span class="hljs-keyword">import</span> expected_conditions <span class="hljs-keyword">as</span> EC<br><span class="hljs-keyword">from</span> selenium.webdriver.support.wait <span class="hljs-keyword">import</span> WebDriverWait<br><br><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">CrackSlider</span>():</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self</span>):</span><br>        <span class="hljs-built_in">super</span>(CrackSlider, self).__init__()<br>        <span class="hljs-comment"># 小说ID</span><br>        self.book_id = <span class="hljs-string">&#x27;12525742&#x27;</span><br>        <span class="hljs-comment"># 章节ID</span><br>        self.zj_id = <span class="hljs-number">1</span><br>        <span class="hljs-comment"># 初始url</span><br>        self.url = <span class="hljs-string">&#x27;https://m.idejian.com/book/&#x27;</span> + self.book_id +<span class="hljs-string">&#x27;/&#x27;</span> + <span class="hljs-built_in">str</span>(self.zj_id) + <span class="hljs-string">&#x27;.html&#x27;</span><br>        <span class="hljs-comment"># 小说名字</span><br>        self.book_names = <span class="hljs-string">&#x27;&#x27;</span><br>        <span class="hljs-comment"># 此步骤很重要，设置为开发者模式，防止被各大网站识别出来</span><br>        self.options = webdriver.ChromeOptions()<br>        self.options.add_experimental_option(<span class="hljs-string">&#x27;excludeSwitches&#x27;</span>, [<span class="hljs-string">&#x27;enable-automation&#x27;</span>])<br>        self.options.add_experimental_option(<span class="hljs-string">&#x27;useAutomationExtension&#x27;</span>, <span class="hljs-literal">False</span>)<br>        self.options.add_argument(<span class="hljs-string">&#x27;--headless&#x27;</span>) <span class="hljs-comment"># 设置无头模式</span><br>        <span class="hljs-comment"># 模拟手机</span><br>        self.mobileEmulation = &#123;<span class="hljs-string">&#x27;deviceName&#x27;</span>: <span class="hljs-string">&#x27;iPhone X&#x27;</span>&#125;<br>        self.options.add_experimental_option(<span class="hljs-string">&#x27;mobileEmulation&#x27;</span>, self.mobileEmulation)<br><br>        self.driver = webdriver.Chrome(options=self.options)<br>        self.driver.execute_cdp_cmd(<span class="hljs-string">&#x27;Page.addScriptToEvaluateOnNewDocument&#x27;</span>, &#123;<br>            <span class="hljs-string">&#x27;source&#x27;</span>: <span class="hljs-string">&#x27;Object.defineProperty(navigator, &quot;webdriver&quot;, &#123;get: () =&gt; undefined&#125;)&#x27;</span><br>        &#125;)<br>        self.driver.set_window_size(<span class="hljs-number">1366</span>, <span class="hljs-number">768</span>)<br>        <span class="hljs-comment"># self.driver.maximize_window()</span><br>        <span class="hljs-comment"># 等待加载元素，最多10s</span><br>        self.wait = WebDriverWait(self.driver, <span class="hljs-number">10</span>)<br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">open</span>(<span class="hljs-params">self</span>):</span><br>        start_url = <span class="hljs-string">&#x27;https://m.idejian.com/book/&#x27;</span> + self.book_id +<span class="hljs-string">&#x27;/1.html&#x27;</span><br>        self.driver.get(start_url)<br>        <span class="hljs-comment"># 等待网页加载</span><br>        self.wait.until(<br>            EC.presence_of_all_elements_located(<br>                (By.CLASS_NAME, <span class="hljs-string">&#x27;text-title-1&#x27;</span>)<br>            )<br>        )<br>        self.driver.find_element_by_class_name(<span class="hljs-string">&#x27;tips_menu_it&#x27;</span>).click()<br><br>    <span class="hljs-comment"># 获取小说名字</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">book_name</span>(<span class="hljs-params">self</span>):</span><br>        book_names = self.driver.find_element_by_class_name(<span class="hljs-string">&#x27;biaoti&#x27;</span>).text<br>        book_names = book_names.split(<span class="hljs-string">&#x27;\n&#x27;</span>)<br>        <span class="hljs-built_in">print</span>(book_names[<span class="hljs-number">0</span>])<br>        self.book_names = book_names[<span class="hljs-number">0</span>]<br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_book</span>(<span class="hljs-params">self, zj_url, zj_id</span>):</span><br>        txt_s = <span class="hljs-string">&#x27;&#x27;</span><br>        self.driver.get(zj_url)<br>        <span class="hljs-comment"># 等待网页加载</span><br>        <span class="hljs-keyword">try</span>:<br>            self.wait.until(<br>                EC.presence_of_all_elements_located(<br>                    (By.CLASS_NAME, <span class="hljs-string">&#x27;text-title-1&#x27;</span>)<br>                )<br>            )<br>        <span class="hljs-keyword">except</span>:<br>            <span class="hljs-comment"># 超过最后一章为空白，肯定报错...</span><br>            self.close()<br>        <span class="hljs-comment"># 开始提取txt</span><br>        <span class="hljs-comment"># 章节名字</span><br>        zj_name = self.driver.find_element_by_class_name(<span class="hljs-string">&#x27;text-title-1&#x27;</span>).text<br>        <span class="hljs-built_in">print</span>(zj_name)<br>        txt_s = txt_s + zj_name + <span class="hljs-string">&#x27;\n&#x27;</span><br>        <span class="hljs-comment"># txt</span><br>        <span class="hljs-keyword">if</span> zj_id == <span class="hljs-number">1</span>:<br>            ps = self.driver.find_elements_by_class_name(<span class="hljs-string">&#x27;h5_mainbody&#x27;</span>)[<span class="hljs-number">1</span>].find_elements_by_tag_name(<span class="hljs-string">&#x27;p&#x27;</span>)<br>        <span class="hljs-keyword">else</span>:<br>            ps = self.driver.find_element_by_class_name(<span class="hljs-string">&#x27;h5_mainbody&#x27;</span>).find_elements_by_tag_name(<span class="hljs-string">&#x27;p&#x27;</span>)<br>        <span class="hljs-keyword">if</span> ps:<br>            <span class="hljs-keyword">for</span> p <span class="hljs-keyword">in</span> ps:<br>                txt_s = txt_s + p.text + <span class="hljs-string">&#x27;\n&#x27;</span><br>            <span class="hljs-built_in">print</span>(txt_s)<br>            <span class="hljs-comment"># 保存</span><br>            self.writer(txt_s)<br><br>            <span class="hljs-comment"># 下一页</span><br>            zj_id = zj_id + <span class="hljs-number">1</span><br>            next_url = <span class="hljs-string">&#x27;https://m.idejian.com/book/&#x27;</span> + self.book_id +<span class="hljs-string">&#x27;/&#x27;</span> + <span class="hljs-built_in">str</span>(zj_id) + <span class="hljs-string">&#x27;.html&#x27;</span><br>            <span class="hljs-comment"># print(next_url)</span><br>            self.get_book(next_url, zj_id)<br><br>    <span class="hljs-comment"># 保存</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">writer</span>(<span class="hljs-params">self, txt</span>):</span><br>        path = self.book_names + <span class="hljs-string">&#x27;.txt&#x27;</span><br>        <span class="hljs-keyword">with</span> <span class="hljs-built_in">open</span>(path, <span class="hljs-string">&#x27;a&#x27;</span>, encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>) <span class="hljs-keyword">as</span> f:<br>            f.write(txt)<br>            f.write(<span class="hljs-string">&#x27;\n\n&#x27;</span>)<br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">close</span>(<span class="hljs-params">self</span>):</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;下载完成&quot;</span>)<br>        self.driver.close()<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    c = CrackSlider()<br>    c.<span class="hljs-built_in">open</span>()<br>    c.book_name()<br>    c.get_book(c.url, c.zj_id)<br><br></code></pre></td></tr></table></figure><h2 id="嘿嘿"><a href="#嘿嘿" class="headerlink" title="嘿嘿"></a>嘿嘿</h2><p>评论系统不开，代码写的真看不下去可以联系方式来找我喷…</p>]]></content>
    
    
    
    <tags>
      
      <tag>python3</tag>
      
      <tag>selenium</tag>
      
      <tag>小说下载</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>用Python试玩mysql</title>
    <link href="/2021/06/19/pysql/"/>
    <url>/2021/06/19/pysql/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近找到一个好玩的东西需要用到mysql数据库，就用python试这学了一下mysql最基本的东西</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><code class="hljs vim"># -*- codin<span class="hljs-variable">g:</span> utf-<span class="hljs-number">8</span> -*-<br>import pymysql<br><br>dd = [&#123;<span class="hljs-string">&#x27;订单号&#x27;</span>: <span class="hljs-string">&#x27;1461071172&#x27;</span>, <span class="hljs-string">&#x27;下单时间&#x27;</span>: <span class="hljs-string">&#x27;2021-05-18 13:18:38&#x27;</span>, <span class="hljs-string">&#x27;购卡类型&#x27;</span>: <span class="hljs-string">&#x27;寄售点数&#x27;</span>, <span class="hljs-string">&#x27;购买金额&#x27;</span>: <span class="hljs-string">&#x27;50.00元&#x27;</span>, <span class="hljs-string">&#x27;状态&#x27;</span>: <span class="hljs-string">&#x27;未支付&#x27;</span>, <span class="hljs-string">&#x27;充值帐号&#x27;</span>: <span class="hljs-string">&#x27;djdjwq147123@163.com&#x27;</span>, <span class="hljs-string">&#x27;充值类型&#x27;</span>: <span class="hljs-string">&#x27;寄售点数&#x27;</span>, <span class="hljs-string">&#x27;充值数量&#x27;</span>: <span class="hljs-string">&#x27;500&#x27;</span>, <span class="hljs-string">&#x27;支付方式&#x27;</span>: <span class="hljs-string">&#x27;网易支付&#x27;</span>, <span class="hljs-string">&#x27;支付金额&#x27;</span>: <span class="hljs-string">&#x27;50.00 元&#x27;</span>, <span class="hljs-string">&#x27;参与活动&#x27;</span>: <span class="hljs-string">&#x27;您未参加活动&#x27;</span>&#125;,&#123;<span class="hljs-string">&#x27;订单号&#x27;</span>: <span class="hljs-string">&#x27;1461071173&#x27;</span>, <span class="hljs-string">&#x27;下单时间&#x27;</span>: <span class="hljs-string">&#x27;2021-05-18 13:18:38&#x27;</span>, <span class="hljs-string">&#x27;购卡类型&#x27;</span>: <span class="hljs-string">&#x27;寄售点数&#x27;</span>, <span class="hljs-string">&#x27;购买金额&#x27;</span>: <span class="hljs-string">&#x27;50.00元&#x27;</span>, <span class="hljs-string">&#x27;状态&#x27;</span>: <span class="hljs-string">&#x27;未支付&#x27;</span>, <span class="hljs-string">&#x27;充值帐号&#x27;</span>: <span class="hljs-string">&#x27;djdjwq147123@163.com&#x27;</span>, <span class="hljs-string">&#x27;充值类型&#x27;</span>: <span class="hljs-string">&#x27;寄售点数&#x27;</span>, <span class="hljs-string">&#x27;充值数量&#x27;</span>: <span class="hljs-string">&#x27;500&#x27;</span>, <span class="hljs-string">&#x27;支付方式&#x27;</span>: <span class="hljs-string">&#x27;网易支付&#x27;</span>, <span class="hljs-string">&#x27;支付金额&#x27;</span>: <span class="hljs-string">&#x27;50.00 元&#x27;</span>, <span class="hljs-string">&#x27;参与活动&#x27;</span>: <span class="hljs-string">&#x27;您未参加活动&#x27;</span>&#125;]<br># 连接数据库<br>def mysql_lj():<br>    <span class="hljs-keyword">try</span>:<br>        # 打开数据库连接<br>        conn = pymysql.connect(<span class="hljs-string">&#x27;localhost&#x27;</span>, user = <span class="hljs-string">&#x27;root&#x27;</span>, passwd = <span class="hljs-string">&#x27;password&#x27;</span>, db = <span class="hljs-string">&#x27;pythonDB&#x27;</span>)<br>        # 获取游标<br>        <span class="hljs-built_in">cursor</span> = conn.<span class="hljs-built_in">cursor</span>()<br>        <span class="hljs-keyword">print</span>(<span class="hljs-string">&quot;数据库连接成功&quot;</span>)<br>    excep<span class="hljs-variable">t:</span><br>        <span class="hljs-keyword">print</span>(<span class="hljs-string">&quot;第一次连接数据库失败&quot;</span>)<br>        # 创建数据库<br>        # 打开数据库连接<br>        conn = pymysql.connect(<span class="hljs-string">&#x27;localhost&#x27;</span>, user = <span class="hljs-string">&#x27;root&#x27;</span>, passwd = <span class="hljs-string">&#x27;password&#x27;</span>)<br>        # 获取游标<br>        <span class="hljs-built_in">cursor</span> = conn.<span class="hljs-built_in">cursor</span>()<br>        # 创建pythonBD数据库<br>        <span class="hljs-built_in">cursor</span>.<span class="hljs-keyword">execute</span>(<span class="hljs-string">&#x27;CREATE DATABASE IF NOT EXISTS pythonDB DEFAULT CHARSET utf8 COLLATE utf8_general_ci;&#x27;</span>)<br>        <span class="hljs-built_in">cursor</span>.<span class="hljs-keyword">close</span>() # 先关闭游标<br>        conn.<span class="hljs-keyword">close</span>() # 再关闭数据库连接<br>        <span class="hljs-keyword">print</span>(<span class="hljs-string">&#x27;创建pythonBD数据库成功&#x27;</span>)<br>        conn = pymysql.connect(<span class="hljs-string">&#x27;localhost&#x27;</span>, user = <span class="hljs-string">&#x27;root&#x27;</span>, passwd = <span class="hljs-string">&#x27;password&#x27;</span>, db = <span class="hljs-string">&#x27;pythonDB&#x27;</span>)<br>        # 获取游标<br>        <span class="hljs-built_in">cursor</span> = conn.<span class="hljs-built_in">cursor</span>()<br>        # 创建表<br>        <span class="hljs-built_in">cursor</span>.<span class="hljs-keyword">execute</span>(<span class="hljs-string">&#x27;drop table if exists user&#x27;</span>)<br>        sql = <span class="hljs-string">&quot;&quot;</span><span class="hljs-comment">&quot;CREATE TABLE IF NOT EXISTS `user` (</span><br>        `订单号` <span class="hljs-keyword">int</span>(<span class="hljs-number">11</span>) NOT NULL,<br>        `下单时间` varchar(<span class="hljs-number">255</span>) NOT NULL,<br>        `购卡类型` varchar(<span class="hljs-number">255</span>) NOT NULL,<br>        `购买金额` varchar(<span class="hljs-number">255</span>) NOT NULL,<br>        `状态` varchar(<span class="hljs-number">255</span>) NOT NULL,<br>        `充值帐号` varchar(<span class="hljs-number">255</span>) NOT NULL,<br>        `充值类型` varchar(<span class="hljs-number">255</span>) NOT NULL,<br>        `充值数量` <span class="hljs-keyword">int</span>(<span class="hljs-number">11</span>) NOT NULL,<br>        `支付方式` varchar(<span class="hljs-number">255</span>) NOT NULL,<br>        `支付金额` varchar(<span class="hljs-number">255</span>) NOT NULL,<br>        `参与活动` varchar(<span class="hljs-number">255</span>) NOT NULL,<br>        PRIMARY KEY (`订单号`)<br>        ) ENGINE=InnoDB  DEFAULT CHARSET=utf8<span class="hljs-string">&quot;&quot;</span><span class="hljs-comment">&quot;</span><br>        <span class="hljs-built_in">cursor</span>.<span class="hljs-keyword">execute</span>(sql)<br><br><br># 插入数据库<br>def insert_mysql():<br>    conn = pymysql.connect(<span class="hljs-string">&#x27;localhost&#x27;</span>, user = <span class="hljs-string">&#x27;root&#x27;</span>, passwd = <span class="hljs-string">&#x27;password&#x27;</span>, db = <span class="hljs-string">&#x27;pythonDB&#x27;</span>)<br>    # 获取游标<br>    <span class="hljs-built_in">cursor</span> = conn.<span class="hljs-built_in">cursor</span>()<br>    <span class="hljs-keyword">for</span> i in dd:<br>        sql = <span class="hljs-string">&quot;insert into user values(%s,%s,%s,%s,%s,%s,%s,%s,%s,%s,%s)&quot;</span><br>        <span class="hljs-keyword">try</span>:<br>            <span class="hljs-keyword">insert</span> = <span class="hljs-built_in">cursor</span>.<span class="hljs-keyword">execute</span>(sql, (i[<span class="hljs-string">&#x27;订单号&#x27;</span>],i[<span class="hljs-string">&#x27;下单时间&#x27;</span>],i[<span class="hljs-string">&#x27;购卡类型&#x27;</span>],i[<span class="hljs-string">&#x27;购买金额&#x27;</span>],i[<span class="hljs-string">&#x27;状态&#x27;</span>],i[<span class="hljs-string">&#x27;充值帐号&#x27;</span>],i[<span class="hljs-string">&#x27;充值类型&#x27;</span>],i[<span class="hljs-string">&#x27;充值数量&#x27;</span>],i[<span class="hljs-string">&#x27;支付方式&#x27;</span>],i[<span class="hljs-string">&#x27;支付金额&#x27;</span>],i[<span class="hljs-string">&#x27;参与活动&#x27;</span>]))<br>            <span class="hljs-keyword">print</span>(<span class="hljs-string">&#x27;添加语句受影响的行数：&#x27;</span>,<span class="hljs-keyword">insert</span>)<br>        excep<span class="hljs-variable">t:</span><br>            <span class="hljs-keyword">print</span>(<span class="hljs-string">&#x27;订单号&#123;&#125;重复，不插入数据库&#x27;</span>.format(i[<span class="hljs-string">&#x27;订单号&#x27;</span>]))<br>    conn.commit() # 更新<br>    <span class="hljs-built_in">cursor</span>.<span class="hljs-keyword">close</span>()<br>    conn.<span class="hljs-keyword">close</span>()<br><br><br><span class="hljs-keyword">if</span> __name__ == <span class="hljs-string">&#x27;__main__&#x27;</span>:<br>    mysql_lj()<br>    insert_mysql()<br><br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>python3</tag>
      
      <tag>mysql</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>python多线程下载小说</title>
    <link href="/2021/05/14/downtxt/"/>
    <url>/2021/05/14/downtxt/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>做为一个宅男，自然是一定会看小说的，现在好看的小说都是需要付费的，但是白嫖的一定更香。</p><p>分享一个我经常看的小说网站<a href="https://www.idejian.com/">得间</a>，基本掌阅的小说都有。</p><p>自己一般是在APP里听小说，浏览器里就不行，就把他爬下来本地阅读了</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>一开始就是用request方法下载，发现下载速度实在是太慢了，就加上了多线程</p><p>感谢<a href="https://blog.csdn.net/the_sangzi_home/article/details/104567605">桑梓南</a>大佬提供的多线程方法</p><p><img src="https://cdn.jsdelivr.net/gh/qiuliqi/qiuliqi.github.io@master/img/20210514194218.png"></p><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> threading<br><span class="hljs-keyword">import</span> time<br><span class="hljs-keyword">from</span> bs4 <span class="hljs-keyword">import</span> BeautifulSoup<br><span class="hljs-keyword">import</span> codecs<br><span class="hljs-keyword">import</span> requests<br><br><span class="hljs-comment"># 开始时间</span><br>start_time = time.time()<br><br><br><span class="hljs-comment"># 创建线程类</span><br><span class="hljs-class"><span class="hljs-keyword">class</span> <span class="hljs-title">myTread</span>(<span class="hljs-params">threading.Thread</span>):</span><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">__init__</span>(<span class="hljs-params">self, threadID, name, st</span>):</span><br>        threading.Thread.__init__(self)<br>        self.threadID = threadID<br>        self.name = name<br>        self.st = st<br><br>    <span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">run</span>(<span class="hljs-params">self</span>):</span><br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;stat &quot;</span>, <span class="hljs-built_in">str</span>(self.name))<br>        threadget(self.st)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;end &quot;</span>, <span class="hljs-built_in">str</span>(self.name))<br><br><br>txtcontent = &#123;&#125;  <span class="hljs-comment"># 存储小说所有内容</span><br>server_url = <span class="hljs-string">&#x27;https://www.idejian.com&#x27;</span><br>headers = &#123;<br>    <span class="hljs-string">&#x27;Accept&#x27;</span>: <span class="hljs-string">&#x27;text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9&#x27;</span>,<br>    <span class="hljs-string">&#x27;Accept-Language&#x27;</span>: <span class="hljs-string">&#x27;zh-CN,zh;q=0.9,en;q=0.8&#x27;</span>,<br>    <span class="hljs-string">&#x27;user-agent&#x27;</span>: <span class="hljs-string">&#x27;Mozilla/5.0 (Windows NT 6.1; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/87.0.4280.141 Safari/537.36&#x27;</span><br>&#125;<br><br><br><span class="hljs-comment"># get</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">gethtml</span>(<span class="hljs-params">url</span>):</span><br>    html = requests.get(url=url, headers=headers).content.decode(<span class="hljs-string">&#x27;UTF-8&#x27;</span>, <span class="hljs-string">&#x27;ignore&#x27;</span>)<br>    <span class="hljs-keyword">return</span> html<br><br><br>txt_name = []  <span class="hljs-comment"># 存放小说名字</span><br>chaptername = []  <span class="hljs-comment"># 存放小说章节名字</span><br>chapteraddress = []  <span class="hljs-comment"># 存放小说章节地址</span><br><br><br><span class="hljs-comment"># 获取小说名字、所有章节名字和地址</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">getchapter</span>(<span class="hljs-params">html</span>):</span><br>    soup = BeautifulSoup(html, <span class="hljs-string">&#x27;lxml&#x27;</span>)<br>    <span class="hljs-keyword">try</span>:<br>        name = soup.find(<span class="hljs-string">&#x27;div&#x27;</span>, class_=<span class="hljs-string">&quot;detail_bkname&quot;</span>).find(<span class="hljs-string">&#x27;a&#x27;</span>)<br>        <span class="hljs-comment">#print(name.string)</span><br>        txt_name.append(name.string)<br>        alist = soup.find(<span class="hljs-string">&#x27;ul&#x27;</span>, class_=<span class="hljs-string">&quot;catelog_list&quot;</span>).find_all(<span class="hljs-string">&#x27;a&#x27;</span>)<br>        <span class="hljs-comment">#print(alist)</span><br>        <span class="hljs-keyword">for</span> <span class="hljs-built_in">list</span> <span class="hljs-keyword">in</span> alist:<br>            <span class="hljs-comment"># print(list.string)</span><br>            chaptername.append(<span class="hljs-built_in">list</span>.string)<br>            href = <span class="hljs-string">&#x27;https://www.idejian.com&#x27;</span> + <span class="hljs-built_in">list</span>[<span class="hljs-string">&#x27;href&#x27;</span>]<br>            chapteraddress.append(href)<br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;未找到章节&#x27;</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br><br><br><span class="hljs-comment"># 获取章节内容</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">getdetail</span>(<span class="hljs-params">html</span>):</span><br>    soup = BeautifulSoup(html, <span class="hljs-string">&#x27;lxml&#x27;</span>)<br>    <span class="hljs-keyword">try</span>:<br>        content = <span class="hljs-string">&#x27;&#x27;</span><br>        pstring = soup.find_all(<span class="hljs-string">&#x27;div&#x27;</span>, class_=<span class="hljs-string">&quot;h5_mainbody&quot;</span>)<br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">len</span>(pstring) &gt; <span class="hljs-number">1</span>:<br>            pstrings = pstring[<span class="hljs-number">1</span>].find_all(<span class="hljs-string">&#x27;p&#x27;</span>)<br>        <span class="hljs-keyword">else</span>:<br>            pstrings = pstring[<span class="hljs-number">0</span>].find_all(<span class="hljs-string">&#x27;p&#x27;</span>)<br>        <span class="hljs-comment"># print(pstrings)</span><br>        <span class="hljs-keyword">for</span> p <span class="hljs-keyword">in</span> pstrings:<br>            content += p.string<br>            <span class="hljs-comment"># content += &#x27;\n&#x27;</span><br>        <span class="hljs-comment"># print(content)</span><br>        <span class="hljs-keyword">return</span> content<br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;出错&quot;</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&quot;出错&quot;</span><br><br><br><span class="hljs-comment"># 线程类</span><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">threadget</span>(<span class="hljs-params">st</span>):</span><br>    <span class="hljs-built_in">max</span> = <span class="hljs-built_in">len</span>(chaptername)<br>    <span class="hljs-keyword">while</span> st &lt; <span class="hljs-built_in">max</span>:<br>        url = <span class="hljs-built_in">str</span>(chapteraddress[st])<br>        html = gethtml(url)<br>        content = getdetail(html)<br>        txtcontent[st] = content<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;下载完毕&#x27;</span> + chaptername[st])<br>        st += thread_count<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">getname</span>(<span class="hljs-params">name</span>):</span><br>    url = <span class="hljs-string">&#x27;https://www.idejian.com/search?keyword=&#x27;</span> + name<br>    html = gethtml(url)<br>    soup = BeautifulSoup(html, <span class="hljs-string">&#x27;lxml&#x27;</span>)<br>    <span class="hljs-keyword">try</span>:<br>        namelist = soup.find(<span class="hljs-string">&#x27;ul&#x27;</span>, class_=<span class="hljs-string">&quot;rank_ullist&quot;</span>).find(<span class="hljs-string">&#x27;div&#x27;</span>, class_=<span class="hljs-string">&quot;rank_bkname&quot;</span>).find(<span class="hljs-string">&#x27;a&#x27;</span>)<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;开始下载小说：&#x27;</span>,namelist.string)<br>        <span class="hljs-keyword">return</span> namelist[<span class="hljs-string">&#x27;href&#x27;</span>]<br>    <span class="hljs-keyword">except</span>:<br>        <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;未找到该小说&#x27;</span>)<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">False</span><br><br><br><br><br><br>txt_id = <span class="hljs-built_in">str</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&#x27;请输入你想要下载的小说名字\n&#x27;</span>))<br>book_url = getname(txt_id)<br><span class="hljs-keyword">if</span> book_url:<br>    url = server_url + book_url<br>    html = gethtml(url)<br>    getchapter(html)<br><br>    thread_list = []<br>    thread_count = <span class="hljs-built_in">int</span>(<span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;请输入需要开的线程数\n&quot;</span>))<br>    <span class="hljs-keyword">for</span> <span class="hljs-built_in">id</span> <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(thread_count):<br>        thread1 = myTread(<span class="hljs-built_in">id</span>, <span class="hljs-built_in">str</span>(<span class="hljs-built_in">id</span>), <span class="hljs-built_in">id</span>)<br>        thread_list.append(thread1)<br><br>    <span class="hljs-keyword">for</span> t <span class="hljs-keyword">in</span> thread_list:<br>        t.setDaemon(<span class="hljs-literal">False</span>)<br>        t.start()<br><br>    <span class="hljs-keyword">for</span> t <span class="hljs-keyword">in</span> thread_list:<br>        t.join()<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&#x27;\n子线程运行完毕&#x27;</span>)<br>    <span class="hljs-comment"># 章节内容排序</span><br>    txtcontent1 = <span class="hljs-built_in">sorted</span>(txtcontent)<br>    file = codecs.<span class="hljs-built_in">open</span>(<span class="hljs-string">&#x27;./小说/&#x27;</span> + txt_name[<span class="hljs-number">0</span>] + <span class="hljs-string">&#x27;.txt&#x27;</span>, <span class="hljs-string">&#x27;w&#x27;</span>, encoding=<span class="hljs-string">&#x27;utf-8&#x27;</span>)  <span class="hljs-comment"># 小说存储位置</span><br>    chaptercount = <span class="hljs-built_in">len</span>(chaptername)<br><br>    <span class="hljs-comment"># 写入文件</span><br>    <span class="hljs-keyword">for</span> ch <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(chaptercount):<br>        title = <span class="hljs-built_in">str</span>(chaptername[ch]) + <span class="hljs-string">&#x27;\n&#x27;</span><br>        content = <span class="hljs-built_in">str</span>(txtcontent[txtcontent1[ch]])<br>        file.write(title+content)<br>    file.close()<br>    end_time = time.time()<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;下载完毕，总耗时&quot;</span>, <span class="hljs-built_in">int</span>(end_time-start_time), <span class="hljs-string">&quot;秒&quot;</span>)<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
    <tags>
      
      <tag>python3</tag>
      
      <tag>小说</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>PC版微信加密图片解密，用Python实现</title>
    <link href="/2021/05/05/wximg/"/>
    <url>/2021/05/05/wximg/</url>
    
    <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>想找以前聊天的图片的时候才发现PC版的微信图片储存的文件都dat格式，不能直接打开。在度娘搜索到微信会加密存储用户接受到的所有图片信息，解密方法也好多。</p><p>刚好最近在学python，看到有用python的解密方法，拿来练练手好了</p><h2 id="解密方法"><a href="#解密方法" class="headerlink" title="解密方法"></a>解密方法</h2><p>在知乎上看到大佬<strong>Python小宇宙</strong>的方法<br><img src="https://cdn.jsdelivr.net/gh/qiuliqi/qiuliqi.github.io@master/img/20210505171033.png"></p><h2 id="代码实现"><a href="#代码实现" class="headerlink" title="代码实现"></a>代码实现</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> os<br><br><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br><span class="hljs-string">图片字节头信息，</span><br><span class="hljs-string">[0][1]为jpg头信息，</span><br><span class="hljs-string">[2][3]为png头信息，</span><br><span class="hljs-string">[4][5]为gif头信息</span><br><span class="hljs-string">&#x27;&#x27;&#x27;</span><br>pic_head = [<span class="hljs-number">0xff</span>, <span class="hljs-number">0xd8</span>, <span class="hljs-number">0x89</span>, <span class="hljs-number">0x50</span>, <span class="hljs-number">0x47</span>, <span class="hljs-number">0x49</span>]<br><span class="hljs-comment"># 解密码</span><br>decode_code = <span class="hljs-number">0</span><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">get_code</span>(<span class="hljs-params">file_path</span>):</span><br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    自动判断文件类型，并获取dat文件解密码</span><br><span class="hljs-string">    :param file_path: dat文件路径</span><br><span class="hljs-string">    :return: 如果文件为jpg/png/gif格式，则返回解密码，否则返回0</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    dat_file = <span class="hljs-built_in">open</span>(file_path, <span class="hljs-string">&quot;rb&quot;</span>)<br>    dat_read = dat_file.read(<span class="hljs-number">2</span>)<br>    head_index = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">while</span> head_index &lt; <span class="hljs-built_in">len</span>(pic_head):<br>        <span class="hljs-comment"># 使用第一个头信息字节来计算加密码</span><br>        <span class="hljs-comment"># 第二个字节来验证解密码是否正确</span><br>        code = dat_read[<span class="hljs-number">0</span>] ^ pic_head[head_index]<br>        idf_code = dat_read[<span class="hljs-number">1</span>] ^ code<br>        head_index = head_index + <span class="hljs-number">1</span><br>        <span class="hljs-keyword">if</span> idf_code == pic_head[head_index]:<br>            dat_file.close()<br>            <span class="hljs-keyword">return</span> code<br>        head_index = head_index + <span class="hljs-number">1</span><br><br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;not jpg, png , gif&quot;</span>)<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span><br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">decode_dat</span>(<span class="hljs-params">file_path</span>):</span><br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    解密文件，并生成图片</span><br><span class="hljs-string">    :param file_path: dat文件路径</span><br><span class="hljs-string">    : return: 无</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    decode_code = get_code(file_path)<br>    dat_file = <span class="hljs-built_in">open</span>(file_path, <span class="hljs-string">&quot;rb&quot;</span>)<br>    <span class="hljs-comment"># 去除。dat后缀</span><br>    pic_name = os.path.splitext(file_path)[<span class="hljs-number">0</span>] + <span class="hljs-string">&quot;.jpg&quot;</span><br>    <span class="hljs-comment"># 检测文件是否存在，避免重复运行出现多个文件</span><br>    <span class="hljs-keyword">if</span> <span class="hljs-keyword">not</span> os.path.isfile(pic_name):<br>        pic_write = <span class="hljs-built_in">open</span>(pic_name, <span class="hljs-string">&quot;wb&quot;</span>)<br>        <span class="hljs-keyword">for</span> dat_data <span class="hljs-keyword">in</span> dat_file:<br>            <span class="hljs-keyword">for</span> dat_byte <span class="hljs-keyword">in</span> dat_data:<br>                pic_data = dat_byte ^ decode_code<br>                pic_write.write(<span class="hljs-built_in">bytes</span>([pic_data]))<br>        <span class="hljs-built_in">print</span>(pic_name + <span class="hljs-string">&#x27;完成&#x27;</span>)<br>        dat_file.close()<br>        pic_write.close()<br><br><br><span class="hljs-function"><span class="hljs-keyword">def</span> <span class="hljs-title">find_datfile</span>(<span class="hljs-params">dir_path</span>):</span><br>    <span class="hljs-string">&quot;&quot;&quot;</span><br><span class="hljs-string">    获取dat文件目录下所有的文件</span><br><span class="hljs-string">    :param dir_path: dat文件目录</span><br><span class="hljs-string">    :return: 无</span><br><span class="hljs-string">    &quot;&quot;&quot;</span><br>    flies_list = os.listdir(dir_path)<br>    <span class="hljs-keyword">for</span> file_name <span class="hljs-keyword">in</span> flies_list:<br>        file_path = os.path.join(dir_path, file_name)<br>        <span class="hljs-comment"># 判断是否文件夹</span><br>        <span class="hljs-keyword">if</span> os.path.isdir(file_path):<br>            find_datfile(file_path)<br>        <span class="hljs-keyword">if</span> os.path.isfile(file_path):<br>            decode_dat(file_path)<br><br><br>path = <span class="hljs-string">&#x27;C:\\Users\\qiu\\Desktop\\222&#x27;</span><br>find_datfile(path)<br><span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;文件解密完成&quot;</span>)<br><br></code></pre></td></tr></table></figure><p>感谢大佬 <a href="https://zhuanlan.zhihu.com/p/130314175">Python小宇宙</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>微信图片</tag>
      
      <tag>python3</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>重新搭建hexo</title>
    <link href="/2021/04/28/newhexomk/"/>
    <url>/2021/04/28/newhexomk/</url>
    
    <content type="html"><![CDATA[<p>之前搭建的hexo本地文件因为重装系统搞没了，就一直懒的去找回了，想着永不更新的！</p><p>结果今天有时间就慢慢找回了，我没用啥技巧，重新下载主题设置，重新更新旧文章…</p><p>2022.2.16更新</p><p>因为系统重装，又要重新搭建一次hexo，还好本地文件保存好了</p><p>下载git，设置用户名和邮箱，连接ssh</p><p>下载node.js，下载hexo</p><p>还好有大佬 <a href="https://www.cnblogs.com/visugar/p/6821777.html">爱吃面包的兰兰</a> 的hexo教程，这次搭建还算轻松</p><p>非常感谢！</p>]]></content>
    
    
    
    <tags>
      
      <tag>日记</tag>
      
      <tag>hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>终于学会改大佬api里面的模型了</title>
    <link href="/2021/04/28/xuehuigaiapi/"/>
    <url>/2021/04/28/xuehuigaiapi/</url>
    
    <content type="html"><![CDATA[<p style="text-indent: 2em;">一开始看到大佬那一页满满的api说明就退缩了，以为改大佬api里面的模型很麻烦，没怎么看就直接拿来用了。这几天因为学了点在游戏里提取live2d的方法，沉迷于纸片人无法自拔了，扒了一大堆模型文件，就想放到我的网站上慢慢玩</p><p style="text-indent: 2em;">于是重新回去看了一下大佬介绍的使用方法，发现原来十分的简单，就是在model里面添加模型文件，然后在list文件里添加路径就可以，大佬真的是太棒了</p><p><img src="https://qiuliqi.top/wp-content/uploads/2020/09/20200904144046.png" alt="目录"></p><p>需要注意的是模型文件里面的文件名需要修改一下下，起飞咯</p><p><a href="https://api.qiuliqi.top/live2d/mxapisy.html">小可爱预览和使用方法</a></p><p>谢谢各位大佬教导！</p><p><a href="https://github.com/fghrsh/live2d_api">后端API</a><br><a href="https://github.com/stevenjoezhang/live2d-widget">前端API</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>live2d</tag>
      
      <tag>api</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>我胆小的借口来了</title>
    <link href="/2021/04/28/wodxdejk/"/>
    <url>/2021/04/28/wodxdejk/</url>
    
    <content type="html"><![CDATA[<center><p>古人云：“吉人寡言语，躁人之辞多。”</p><p>他人是非，不如不言；</p><p>人云亦云，不如不言；</p><p>言而不当，不如不言；</p><p>旧事重提，不如不言；</p><p>知而不行，不如不言；</p><p>真正智者，知而不言。</p></center>]]></content>
    
    
    
    <tags>
      
      <tag>日记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>小秋秋搜索主页</title>
    <link href="/2021/04/28/xqqsszy/"/>
    <url>/2021/04/28/xqqsszy/</url>
    
    <content type="html"><![CDATA[<center><p>一个简单的搜索主页，搜索框+书签+看板娘= <a href="https://so.qiuliqi.top/" rel="noopener noreferrer" target="_blank">小秋秋搜索</a></p><p>欢迎加入浏览器主页</p></center><p><img src="https://cdn.jsdelivr.net/gh/qiuliqi/qiuliqi.github.io/img/20200620115334.png" alt="主页截图"></p><p><img src="https://cdn.jsdelivr.net/gh/qiuliqi/qiuliqi.github.io/img/20210430085832.png" alt="主页截图2"></p><p>原作者github源码：<a href="https://github.com/5iux/sou">查看</a></p><p>感谢<a href="https://www.xiaolfeng.xyz/">筱锋</a>大佬的指导</p>]]></content>
    
    
    
    <tags>
      
      <tag>html</tag>
      
      <tag>搜索主页</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>发现血小板！</title>
    <link href="/2021/04/28/xxb/"/>
    <url>/2021/04/28/xxb/</url>
    
    <content type="html"><![CDATA[<p style="text-indent: 2em;">昨天上班摸鱼的时候，发现了一位大佬用了血小板的看板娘，萝莉控的我瞬间激动了，更高兴的是大佬竟然把模型也发出来了，那必须放到我桌面上呀!</p><h2 id="查看模型"><a href="#查看模型" class="headerlink" title="查看模型"></a>查看模型</h2><p><img src="https://cdn.jsdelivr.net/gh/qiuliqi/live2d@master/biz/sp180912_234533.png" alt="模型图片"></p><h2 id="关于模型的使用"><a href="#关于模型的使用" class="headerlink" title="关于模型的使用"></a>关于模型的使用</h2><p style="text-indent: 2em;">之前我的看板娘都是用的第三方大佬的api，直到最近突然不能用了，才想到要自己建一个api，自建一个api也挺简单的，就是把大佬做好的文件放到自己的网站空间就行，伸手党专业使用过程哈哈。这里肯定要感谢一下大佬们啦</p><p style="text-indent: 2em;">因为血小板是一个单独的模型，我们就不把他放到api里面去了（主要是自己也不会在api里添加模型~~）那就直接把模型文件上传到网站根目录，然后替换掉api链接为你的模型链接就行，这里我也是看另外一个大佬发的文章学习到的</p><p>自己的模型接口：</p><pre><code>https://qiuliqi.top/xxb2/model/xxb/model.json</code></pre><p>替换原waifu.tips.js中的API接口</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-function"><span class="hljs-keyword">function</span> <span class="hljs-title">loadModel</span>(<span class="hljs-params">modelId, modelTexturesId</span>)</span>&#123;<br><span class="hljs-comment">// localStorage.setItem(&#x27;modelId&#x27;, modelId);</span><br><span class="hljs-comment">// if (modelTexturesId === undefined) modelTexturesId = 0;</span><br><span class="hljs-comment">// localStorage.setItem(&#x27;modelTexturesId&#x27;, modelTexturesId);</span><br>loadlive2d(<span class="hljs-string">&#x27;live2d&#x27;</span>,<span class="hljs-string">&#x27;https://qiuliqi.top/xxb2/model/xxb/model.json&#x27;</span><span class="hljs-comment">/*&#x27;https://api.fghrsh.net/live2d/get/?id=&#x27;+modelId+&#x27;-&#x27;+modelTexturesId*/</span>, <span class="hljs-built_in">console</span>.log(<span class="hljs-string">&#x27;live2d&#x27;</span>,<span class="hljs-string">&#x27;模型 &#x27;</span>+modelId+<span class="hljs-string">&#x27;-&#x27;</span>+modelTexturesId+<span class="hljs-string">&#x27; 加载完成&#x27;</span>));<br>&#125;<br></code></pre></td></tr></table></figure><p>因为没有设置很多个皮肤，目前只有小可爱-血小板一个。所以modelId，modelTexturesId都可以忽略了。</p><p><del>最后就是血小板后面那牌子了，我那半路出家的技术还是改不了，回头请教一下大佬</del></p><p>已解决，大佬猫猫大佬有发教程，之前没认真看</p><p>起飞：<a href="https://qiuliqi.top/xxb2/">https://qiuliqi.top/xxb2/</a></p><p>如果是用wallpaper在桌面显示的话，后面还需要加上参数：</p><pre><code>https://qiuliqi.top/xxb2/?bottom=40&amp;amp;right=20</code></pre><p><img src="https://cdn.jsdelivr.net/gh/qiuliqi/qiuliqi.github.io/img/mZuCODtReEtxUO38.gif" alt="血小板gif"></p><p>最后感谢猫与向日葵博客制作的看板娘-血小板。<a href="https://imjad.cn/archives/lab/add-dynamic-poster-girl-with-live2d-to-your-blog-03/">查看地址</a></p><p>感谢Shaka大佬提供的换看板娘模型的教程。<a href="http://blog.177kankan.com/view/34">查看地址</a></p>]]></content>
    
    
    
    <tags>
      
      <tag>live2d</tag>
      
      <tag>看板娘</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2021/04/28/hello-world/"/>
    <url>/2021/04/28/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
